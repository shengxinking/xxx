!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACCEPT_TIMEOUT	thread_fun.h	13;"	d
ACSMX_H	acsmx.h	34;"	d
ACSM_FAIL_STATE	acsmx.h	48;"	d
ACSM_PATTERN	acsmx.h	/^} ACSM_PATTERN;$/;"	t	typeref:struct:_acsm_pattern
ACSM_STATETABLE	acsmx.h	/^}ACSM_STATETABLE; $/;"	t	typeref:struct:__anon1
ACSM_STRUCT	acsmx.h	/^}ACSM_STRUCT;$/;"	t	typeref:struct:__anon2
AC_FREE	acsmx.c	/^AC_FREE (void *p) $/;"	f	file:
AC_MALLOC	acsmx.c	/^AC_MALLOC (int n) $/;"	f	file:
ADD_FIELD_FAIL	sqlite_db.h	23;"	d
ADD_FIELD_SUCCESS	sqlite_db.h	22;"	d
ALLOC_DATA_MEM_FAIL	sqlite_db.h	31;"	d
ALLOC_RECORD_MEM_FAIL	sqlite_db.h	30;"	d
ALPHABET_SIZE	acsmx.h	46;"	d
A_CFG_DB_H	cfg_db.h	2;"	d
A_LOG_H	log_db.h	2;"	d
A_PRIVATE_NETPART_WORTH	xhttp.c	335;"	d	file:
AddMatchListEntry	acsmx.c	/^AddMatchListEntry (ACSM_STRUCT * acsm, int state, ACSM_PATTERN * px) $/;"	f	file:
AddPatternStates	acsmx.c	/^AddPatternStates (ACSM_STRUCT * acsm, ACSM_PATTERN * p) $/;"	f	file:
Assert	base64.c	9;"	d	file:
BUF_LEN	pat.c	36;"	d	file:
B_PRIVATE_NETPART_WORTH	xhttp.c	336;"	d	file:
Base64	base64.c	/^static const char Base64[] =$/;"	v	file:
Base64Values	base64.c	/^int Base64Values[] = {$/;"	v
Build_NFA	acsmx.c	/^Build_NFA (ACSM_STRUCT * acsm) $/;"	f	file:
CFG_FILE	load_cfg.c	9;"	d	file:
CHECK_BOTH	libmulpat.h	/^	CHECK_BOTH,$/;"	e	enum:__anon13
CHECK_BOTH	pat.c	/^        CHECK_BOTH,$/;"	e	enum:__anon14	file:
CHECK_LEFT	libmulpat.h	/^	CHECK_LEFT ,$/;"	e	enum:__anon13
CHECK_LEFT	pat.c	/^        CHECK_LEFT ,$/;"	e	enum:__anon14	file:
CHECK_MEM	xhttp.c	46;"	d	file:
CHECK_NONE	libmulpat.h	/^	CHECK_NONE = 0,$/;"	e	enum:__anon13
CHECK_NONE	pat.c	/^        CHECK_NONE = 0,$/;"	e	enum:__anon14	file:
CHECK_RIGHT	libmulpat.h	/^	CHECK_RIGHT,$/;"	e	enum:__anon13
CHECK_RIGHT	pat.c	/^        CHECK_RIGHT,$/;"	e	enum:__anon14	file:
CHECK_VER	xhttp.c	47;"	d	file:
CIC_DECODE	http_decode.h	6;"	d
COLLECTION_FIELDS_LEN	sqlite_db.h	6;"	d
CONFIG_DB	common.h	9;"	d
C_PRIVATE_NETPART_WORTH	xhttp.c	337;"	d	file:
ConvertCaseEx	acsmx.c	/^ConvertCaseEx (unsigned char *d, unsigned char *s, int m) $/;"	f	file:
Convert_NFA_To_DFA	acsmx.c	/^Convert_NFA_To_DFA (ACSM_STRUCT * acsm) $/;"	f	file:
CopyMatchListEntry	acsmx.c	/^CopyMatchListEntry (ACSM_PATTERN * px) $/;"	f	file:
DATA_LEN_LIMIT	sqlite_db.h	20;"	d
DBG	debug.h	20;"	d
DBG	debug.h	35;"	d
DBGA	common.h	38;"	d
DBGA	common.h	44;"	d
DBGBUF	debug.h	23;"	d
DBGBUF	debug.h	36;"	d
DBGC	common.h	61;"	d
DBGC	common.h	67;"	d
DBGF	common.h	105;"	d
DBGF	common.h	111;"	d
DBGH	common.h	72;"	d
DBGH	common.h	78;"	d
DBGK	common.h	49;"	d
DBGK	common.h	55;"	d
DBGL	common.h	100;"	d
DBGL	common.h	94;"	d
DBGN	common.h	83;"	d
DBGN	common.h	89;"	d
DBGR	common.h	26;"	d
DBGR	common.h	32;"	d
DBG_ATTACK	common.h	36;"	d
DBG_CFG	common.h	59;"	d
DBG_CFG_FILE	common.h	103;"	d
DBG_LOG	common.h	92;"	d
DBG_NET	common.h	81;"	d
DB_TYPE_INT	sqlite_db.h	52;"	d
DB_TYPE_STRING	sqlite_db.h	53;"	d
DEBUG_H	debug.h	3;"	d
Db_Con_cfg	cfg_db.c	/^MYSQL* Db_Con_cfg()$/;"	f
Db_Con_log	log_db.c	/^MYSQL* Db_Con_log()$/;"	f
Db_close	log_db.c	/^void Db_close(MYSQL **db_conn) {$/;"	f
ERR	debug.h	40;"	d
ERRSTR	debug.h	43;"	d
EXTRA_LDFLAGS	Makefile	/^EXTRA_LDFLAGS = -L \/usr\/local\/apr\/lib$/;"	m
EXTRA_LIBS	Makefile	/^EXTRA_LIBS = -L \/usr\/local\/apr\/lib  -L  \/usr\/lib64\/mysql  $/;"	m
FLOW	debug.h	15;"	d
FLOW	debug.h	34;"	d
FZ_IPADDR_H	ip_addr.h	13;"	d
FZ_THREAD_H	thread_fun.h	3;"	d
FailState	acsmx.h	/^    int      FailState;   $/;"	m	struct:__anon1
GET_AGENT_TARGET	load_rule.h	25;"	d
GET_ALL_DECODE	http_decode.h	12;"	d
GET_ARG_TARGET	load_rule.h	21;"	d
GET_BIT	http_decode.h	8;"	d
GET_BIT	load_rule.h	14;"	d
GET_COOKIE_TARGET	load_rule.h	29;"	d
GET_NEED_DECODE	http_decode.h	11;"	d
GET_NEED_ESCAPE_DECODE	http_decode.h	20;"	d
GET_NEED_HTML_DECODE	http_decode.h	17;"	d
GET_NEED_URL_DECODE	http_decode.h	14;"	d
GET_TEXT_FIELD_FAIL	sqlite_db.h	35;"	d
GET_URL_TARGET	load_rule.h	18;"	d
HEX_FLAG	pat.c	34;"	d	file:
HEX_LEN	pat.c	35;"	d	file:
HTTP_AMFBUF	xhttp.h	/^	HTTP_AMFBUF,$/;"	e	enum:__anon19
HTTP_ARGBUF	xhttp.h	/^	HTTP_ARGBUF,$/;"	e	enum:__anon19
HTTP_ARGBUF_OVERSIZE	xhttp.h	508;"	d
HTTP_CHECK_0	xhttp.c	35;"	d	file:
HTTP_CHECK_ERR	xhttp.c	34;"	d	file:
HTTP_CHECK_NULL	xhttp.c	36;"	d	file:
HTTP_CHUNK_FIN	http_basic.h	53;"	d
HTTP_CHUNK_FIN	http_decode.h	24;"	d
HTTP_CHUNK_SIZE	http_basic.h	52;"	d
HTTP_CHUNK_SIZE	http_decode.h	23;"	d
HTTP_CONTENT_TYPE_TABLE_SIZE	http_header.c	222;"	d	file:
HTTP_CTYPE_TABLE_SIZE	xhttp.c	141;"	d	file:
HTTP_ERROR_NUM	xhttp.h	510;"	d
HTTP_FILE_MAX_LEN	http.h	157;"	d
HTTP_FILE_MAX_LEN	xhttp.h	108;"	d
HTTP_FILE_NUM_OVERSIZE	xhttp.h	509;"	d
HTTP_FORM_ARG	http.h	23;"	d
HTTP_FORM_ARG	xhttp.c	19;"	d	file:
HTTP_FORM_BEGIN	http.h	20;"	d
HTTP_FORM_BEGIN	xhttp.c	16;"	d	file:
HTTP_FORM_BODY	http.h	22;"	d
HTTP_FORM_BODY	xhttp.c	18;"	d	file:
HTTP_FORM_FILE	http.h	24;"	d
HTTP_FORM_FILE	xhttp.c	20;"	d	file:
HTTP_FORM_HEADER	http.h	21;"	d
HTTP_FORM_HEADER	xhttp.c	17;"	d	file:
HTTP_FUNC_0	xhttp.c	49;"	d	file:
HTTP_FUNC_NULL	xhttp.c	50;"	d	file:
HTTP_GZIP_NA	xhttp.h	348;"	d
HTTP_HEADBUF	xhttp.h	/^	HTTP_HEADBUF,	$/;"	e	enum:__anon19
HTTP_HEADER_OVERSIZE	xhttp.h	507;"	d
HTTP_HEADER_STATE_CHAR0	http_table.h	/^        HTTP_HEADER_STATE_CHAR0,      \/\/before start$/;"	e	enum:__anon9
HTTP_HEADER_STATE_CHAR1	http_table.h	/^        HTTP_HEADER_STATE_CHAR1,      \/\/start$/;"	e	enum:__anon9
HTTP_HEADER_STATE_CHARN	http_table.h	/^        HTTP_HEADER_STATE_CHARN,      \/\/going on$/;"	e	enum:__anon9
HTTP_HEADER_STATE_N1	http_table.h	/^        HTTP_HEADER_STATE_N1,         \/\/\/r\/n$/;"	e	enum:__anon9
HTTP_HEADER_STATE_N2	http_table.h	/^        HTTP_HEADER_STATE_N2,         \/\/\/r\/n\/r\/n$/;"	e	enum:__anon9
HTTP_HEADER_STATE_NUM	http_table.h	/^        HTTP_HEADER_STATE_NUM,$/;"	e	enum:__anon9
HTTP_HEADER_STATE_R1	http_table.h	/^        HTTP_HEADER_STATE_R1,         \/\/\/r$/;"	e	enum:__anon9
HTTP_HEADER_STATE_R2	http_table.h	/^        HTTP_HEADER_STATE_R2,         \/\/\/r\/n\/r$/;"	e	enum:__anon9
HTTP_HSTATE_CHAR0	xhttp.c	/^        HTTP_HSTATE_CHAR0,	\/\/before start$/;"	e	enum:__anon16	file:
HTTP_HSTATE_CHAR1	xhttp.c	/^        HTTP_HSTATE_CHAR1,	\/\/start$/;"	e	enum:__anon16	file:
HTTP_HSTATE_CHARN	xhttp.c	/^        HTTP_HSTATE_CHARN,	\/\/going on$/;"	e	enum:__anon16	file:
HTTP_HSTATE_N1	xhttp.c	/^        HTTP_HSTATE_N1,		\/\/\/r\/n$/;"	e	enum:__anon16	file:
HTTP_HSTATE_N2	xhttp.c	/^        HTTP_HSTATE_N2,		\/\/\/r\/n\/r\/n$/;"	e	enum:__anon16	file:
HTTP_HSTATE_NUM	xhttp.c	/^        HTTP_HSTATE_NUM,	$/;"	e	enum:__anon16	file:
HTTP_HSTATE_R1	xhttp.c	/^        HTTP_HSTATE_R1,		\/\/\/r$/;"	e	enum:__anon16	file:
HTTP_HSTATE_R2	xhttp.c	/^        HTTP_HSTATE_R2,		\/\/\/r\/n\/r$/;"	e	enum:__anon16	file:
HTTP_IGNORE_PARAM_NUM	xhttp.h	35;"	d
HTTP_INT_BODY_LEN	http_api.h	/^	HTTP_INT_BODY_LEN,$/;"	e	enum:__anon5
HTTP_INT_CONTENT_LEN	http_api.h	/^	HTTP_INT_CONTENT_LEN,$/;"	e	enum:__anon5
HTTP_INT_COOKIE_NUM	http_api.h	/^	HTTP_INT_COOKIE_NUM,$/;"	e	enum:__anon5
HTTP_INT_HEADER_LEN	http_api.h	/^	HTTP_INT_HEADER_LEN,$/;"	e	enum:__anon5
HTTP_INT_HEADER_LINE_NUM	http_api.h	/^	HTTP_INT_HEADER_LINE_NUM,$/;"	e	enum:__anon5
HTTP_INT_MAX_HEADER_LINE_LEN	http_api.h	/^	HTTP_INT_MAX_HEADER_LINE_LEN,$/;"	e	enum:__anon5
HTTP_INT_RANGE_NUM	http_api.h	/^	HTTP_INT_RANGE_NUM,$/;"	e	enum:__anon5
HTTP_INT_REQUEST_LEN	http_api.h	/^	HTTP_INT_REQUEST_LEN,$/;"	e	enum:__anon5
HTTP_INT_RET_CODE	http_api.h	/^	HTTP_INT_RET_CODE,$/;"	e	enum:__anon5
HTTP_INT_URL_ARG_CNT	http_api.h	/^	HTTP_INT_URL_ARG_CNT,$/;"	e	enum:__anon5
HTTP_INT_URL_ARG_LEN	http_api.h	/^	HTTP_INT_URL_ARG_LEN	,$/;"	e	enum:__anon5
HTTP_LOGIC_CONTENT_TYPE	http_api.h	/^	HTTP_LOGIC_CONTENT_TYPE,$/;"	e	enum:__anon4
HTTP_LOGIC_FALSE	http.h	17;"	d
HTTP_LOGIC_FALSE	xhttp.h	344;"	d
HTTP_LOGIC_IS_CHUNKED	http_api.h	/^	HTTP_LOGIC_IS_CHUNKED,$/;"	e	enum:__anon4
HTTP_LOGIC_IS_CLOSED	http_api.h	/^	HTTP_LOGIC_IS_CLOSED,$/;"	e	enum:__anon4
HTTP_LOGIC_METHOD	http_api.h	/^	HTTP_LOGIC_METHOD,$/;"	e	enum:__anon4
HTTP_LOGIC_STATE	http_api.h	/^	HTTP_LOGIC_STATE,$/;"	e	enum:__anon4
HTTP_LOGIC_TRUE	http.h	18;"	d
HTTP_LOGIC_TRUE	xhttp.h	345;"	d
HTTP_MAX_DECBUF	xhttp.c	10;"	d	file:
HTTP_MAX_TOKENLEN	xhttp.c	12;"	d	file:
HTTP_MEM_0	xhttp.c	42;"	d	file:
HTTP_MEM_ERR	xhttp.c	44;"	d	file:
HTTP_MEM_NULL	xhttp.c	43;"	d	file:
HTTP_METHOD_CONNECT	http.h	/^        HTTP_METHOD_CONNECT,$/;"	e	enum:__anon8
HTTP_METHOD_DELETE	http.h	/^        HTTP_METHOD_DELETE,$/;"	e	enum:__anon8
HTTP_METHOD_GET	http.h	/^        HTTP_METHOD_GET,$/;"	e	enum:__anon8
HTTP_METHOD_HEAD	http.h	/^        HTTP_METHOD_HEAD,$/;"	e	enum:__anon8
HTTP_METHOD_NA	http.h	/^        HTTP_METHOD_NA,$/;"	e	enum:__anon8
HTTP_METHOD_NONE	http.h	/^        HTTP_METHOD_NONE,$/;"	e	enum:__anon8
HTTP_METHOD_NUM	http.h	/^        HTTP_METHOD_NUM,$/;"	e	enum:__anon8
HTTP_METHOD_OPTION	http.h	/^        HTTP_METHOD_OPTION,$/;"	e	enum:__anon8
HTTP_METHOD_POST	http.h	/^        HTTP_METHOD_POST,$/;"	e	enum:__anon8
HTTP_METHOD_PUT	http.h	/^        HTTP_METHOD_PUT,$/;"	e	enum:__anon8
HTTP_METHOD_TRACE	http.h	/^        HTTP_METHOD_TRACE,$/;"	e	enum:__anon8
HTTP_METHOD_WEBDAV	http.h	/^        HTTP_METHOD_WEBDAV,$/;"	e	enum:__anon8
HTTP_NORMAL_0	xhttp.c	39;"	d	file:
HTTP_NORMAL_ERR	xhttp.c	38;"	d	file:
HTTP_NORMAL_NULL	xhttp.c	40;"	d	file:
HTTP_NOT_ONLY_GZIP	xhttp.h	350;"	d
HTTP_ONLY_GZIP	xhttp.h	349;"	d
HTTP_PARAM_NAME	xhttp.h	30;"	d
HTTP_PARSE_TABSIZE	xhttp.c	13;"	d	file:
HTTP_REASON_PARAM	xhttp.h	33;"	d
HTTP_REDIECT_PARAM	xhttp.h	32;"	d
HTTP_REWRITE_PARAM	xhttp.h	34;"	d
HTTP_SM_CKNAME	xhttp.h	29;"	d
HTTP_STATE_BODY	http.h	/^        HTTP_STATE_BODY,$/;"	e	enum:__anon7
HTTP_STATE_BODY	xhttp.h	/^	HTTP_STATE_BODY,$/;"	e	enum:__anon17
HTTP_STATE_ERROR	http.h	/^        HTTP_STATE_ERROR,$/;"	e	enum:__anon7
HTTP_STATE_ERROR	xhttp.h	/^	HTTP_STATE_ERROR, $/;"	e	enum:__anon17
HTTP_STATE_HEAD	http.h	/^        HTTP_STATE_HEAD,$/;"	e	enum:__anon7
HTTP_STATE_HEAD	xhttp.h	/^	HTTP_STATE_HEAD,$/;"	e	enum:__anon17
HTTP_STATE_INIT	http.h	/^        HTTP_STATE_INIT = 0,$/;"	e	enum:__anon7
HTTP_STATE_INIT	xhttp.h	/^	HTTP_STATE_INIT = 0,$/;"	e	enum:__anon17
HTTP_STATE_NONE	http.h	/^        HTTP_STATE_NONE,$/;"	e	enum:__anon7
HTTP_STATE_NONE	xhttp.h	/^	HTTP_STATE_NONE,$/;"	e	enum:__anon17
HTTP_STATE_NUM	http.h	/^        HTTP_STATE_NUM,$/;"	e	enum:__anon7
HTTP_STATE_NUM	xhttp.h	/^	HTTP_STATE_NUM,$/;"	e	enum:__anon17
HTTP_STR_AGENT	http_api.h	/^	HTTP_STR_AGENT,$/;"	e	enum:__anon3
HTTP_STR_AUTH	http_api.h	/^	HTTP_STR_AUTH,$/;"	e	enum:__anon3
HTTP_STR_CONTENT_TYPE	http_api.h	/^	HTTP_STR_CONTENT_TYPE,	$/;"	e	enum:__anon3
HTTP_STR_COOKIE	http_api.h	/^	HTTP_STR_COOKIE,$/;"	e	enum:__anon3
HTTP_STR_HOST	http_api.h	/^	HTTP_STR_HOST,$/;"	e	enum:__anon3
HTTP_STR_LOCATION	http_api.h	/^	HTTP_STR_LOCATION,$/;"	e	enum:__anon3
HTTP_STR_PASSWD	http_api.h	/^	HTTP_STR_PASSWD,$/;"	e	enum:__anon3
HTTP_STR_RAW_URL	http_api.h	/^	HTTP_STR_RAW_URL,$/;"	e	enum:__anon3
HTTP_STR_REFER	http_api.h	/^	HTTP_STR_REFER,$/;"	e	enum:__anon3
HTTP_STR_RETCODE	http_api.h	/^	HTTP_STR_RETCODE,$/;"	e	enum:__anon3
HTTP_STR_URL	http_api.h	/^	HTTP_STR_URL,			\/* decoded URL without ARGS *\/$/;"	e	enum:__anon3
HTTP_STR_URL_AND_ARG	http_api.h	/^	HTTP_STR_URL_AND_ARG,$/;"	e	enum:__anon3
HTTP_STR_USER	http_api.h	/^	HTTP_STR_USER,$/;"	e	enum:__anon3
HTTP_TYPE_AMF	http_api.h	/^        HTTP_TYPE_AMF,          \/* amf *\/$/;"	e	enum:__anon6
HTTP_TYPE_COMMON_JS	http_api.h	/^        HTTP_TYPE_COMMON_JS,    \/* common js *\/$/;"	e	enum:__anon6
HTTP_TYPE_CSS	http_api.h	/^        HTTP_TYPE_CSS,          \/* css *\/$/;"	e	enum:__anon6
HTTP_TYPE_FORMENC	http_api.h	/^        HTTP_TYPE_FORMENC,      \/* *\/$/;"	e	enum:__anon6
HTTP_TYPE_HTML	http_api.h	/^        HTTP_TYPE_HTML,         \/* html *\/$/;"	e	enum:__anon6
HTTP_TYPE_JS	http_api.h	/^        HTTP_TYPE_JS,           \/* javascript *\/$/;"	e	enum:__anon6
HTTP_TYPE_MESSAGE	http_api.h	/^        HTTP_TYPE_MESSAGE,    \/* xhtml\/xml *\/$/;"	e	enum:__anon6
HTTP_TYPE_MIX_XML	http_api.h	/^        HTTP_TYPE_MIX_XML,      \/* mixed xml *\/$/;"	e	enum:__anon6
HTTP_TYPE_MR	http_api.h	/^        HTTP_TYPE_MR,           \/* mime *\/$/;"	e	enum:__anon6
HTTP_TYPE_MULTIFORM	http_api.h	/^        HTTP_TYPE_MULTIFORM,    \/* multipart\/form *\/$/;"	e	enum:__anon6
HTTP_TYPE_NA	http_api.h	/^        HTTP_TYPE_NA ,          \/* unknowed type *\/$/;"	e	enum:__anon6
HTTP_TYPE_NAMELEN	xhttp.c	11;"	d	file:
HTTP_TYPE_PLAIN	http_api.h	/^        HTTP_TYPE_PLAIN,        \/* plain *\/$/;"	e	enum:__anon6
HTTP_TYPE_RPC	http_api.h	/^        HTTP_TYPE_RPC,          \/* rpc *\/$/;"	e	enum:__anon6
HTTP_TYPE_RSS_XML	http_api.h	/^        HTTP_TYPE_RSS_XML,      \/* rss xml *\/$/;"	e	enum:__anon6
HTTP_TYPE_SOAP	http_api.h	/^        HTTP_TYPE_SOAP,         \/* soap *\/$/;"	e	enum:__anon6
HTTP_TYPE_TEXT_JS	http_api.h	/^        HTTP_TYPE_TEXT_JS,      \/* text js *\/$/;"	e	enum:__anon6
HTTP_TYPE_XHTML_XML	http_api.h	/^        HTTP_TYPE_XHTML_XML,    \/* xhtml\/xml *\/$/;"	e	enum:__anon6
HTTP_TYPE_XML	http_api.h	/^        HTTP_TYPE_XML,          \/* xml *\/$/;"	e	enum:__anon6
HTTP_VER_09	xhttp.h	/^	HTTP_VER_09,$/;"	e	enum:__anon18
HTTP_VER_10	xhttp.h	/^	HTTP_VER_10,$/;"	e	enum:__anon18
HTTP_VER_11	xhttp.h	/^	HTTP_VER_11,$/;"	e	enum:__anon18
HTTP_VER_12	xhttp.h	/^	HTTP_VER_12,$/;"	e	enum:__anon18
HTTP_VER_NA	xhttp.h	/^	HTTP_VER_NA = 0,$/;"	e	enum:__anon18
IGNORANCE_U00XX	http_decode.c	21;"	d	file:
IGNORANCE_XX	http_decode.c	20;"	d	file:
IGNORANCE_XYY	http_decode.c	22;"	d	file:
INT_DATA_LEN_OVERFLOW	sqlite_db.h	32;"	d
INVALID_DATA_LENGTH	sqlite_db.h	28;"	d
INVALID_DATA_TYPE	sqlite_db.h	29;"	d
IP_ADDR_IS_V4MAPPED	ip_addr.h	52;"	d
IP_ADDR_SET_V4	ip_addr.h	49;"	d
IP_MASK_CIDR_IS_VALID	ip_addr.h	57;"	d
IP_PORT_SET_V4	ip_addr.h	62;"	d
ISODIGIT	http_decode.c	826;"	d	file:
LABEL_STATE_BEGIN	http.h	80;"	d
LABEL_STATE_BEGIN	xhttp.h	208;"	d
LABEL_STATE_NULL	http.h	82;"	d
LABEL_STATE_NULL	xhttp.h	210;"	d
LABEL_STATE_RUN	http.h	81;"	d
LABEL_STATE_RUN	xhttp.h	209;"	d
L_LEN	common.h	6;"	d
MAGIC	pat.c	23;"	d	file:
MAIN_CLASS_ID_LEN	sqlite_db.h	8;"	d
MAX_BIT_MAP_UNIT	libmulpat.h	11;"	d
MAX_BUFFER_SIZE	load_cfg.c	10;"	d	file:
MAX_COLLECTION_NUM	sqlite_db.h	11;"	d
MAX_CONN_PRE	proxy.h	24;"	d
MAX_CUR_CON	proxy.h	26;"	d
MAX_CUR_WORK	proxy.h	27;"	d
MAX_DECODE_LEN	http_decode.h	4;"	d
MAX_FIELD_NUMBER	sqlite_db.h	19;"	d
MAX_FILTER_NUM_PER_SIGNATURE	sqlite_db.h	12;"	d
MAX_HEAD_TABLE_MIX	http_header.c	6;"	d	file:
MAX_HEAD_TABLE_MIX	xhttp.c	113;"	d	file:
MAX_KEYWORD_REQUIRED	sqlite_db.h	10;"	d
MAX_KEY_WORD_ID	libmulpat.h	10;"	d
MAX_KEY_WORD_LEN	libmulpat.h	13;"	d
MAX_LINE_LEN	http_modify.c	11;"	d	file:
MAX_METHOD_TABLE_MIX	http_table.h	48;"	d
MAX_METHOD_TABLE_MIX	xhttp.c	116;"	d	file:
MAX_PKTLEN	proxy.h	21;"	d
MAX_PKT_PRE	proxy.h	23;"	d
MAX_REALSVR	proxy.h	19;"	d
MAX_SQL_STR_LEN	sqlite_db.h	18;"	d
MAX_STRING_LEN	http_decode.c	9;"	d	file:
MAX_TXT_LEN	common.h	11;"	d
MAX_TXT_LEN2	common.h	12;"	d
MAX_WORKNUM	proxy.h	20;"	d
MD_COUNT	common.h	20;"	d
MD_NONE	common.h	18;"	d
MD_RULE_CHECK	common.h	19;"	d
MEET_TARGET_LEN	sqlite_db.h	14;"	d
MEMASSERT	acsmx.c	65;"	d	file:
MEM_ERR	xhttp.c	31;"	d	file:
MIN	http_decode.c	13;"	d	file:
MSG_IDX	pat.c	37;"	d	file:
M_LEN	common.h	5;"	d
MatchFound	acsmx.c	/^MatchFound (unsigned id, int index, void *data) $/;"	f
MatchList	acsmx.h	/^    ACSM_PATTERN *MatchList;   $/;"	m	struct:__anon1
NBSP	http_decode.c	10;"	d	file:
NDEBUG	accept.c	15;"	d	file:
NIPQUAD	connection.c	40;"	d	file:
NIPQUAD_FMT	connection.c	45;"	d	file:
NORMAL_ERR	xhttp.c	30;"	d	file:
NO_PERCENT	http_decode.c	16;"	d	file:
NextState	acsmx.h	/^    int      NextState[ ALPHABET_SIZE ];  $/;"	m	struct:__anon1
OBJECTS_TEST	Makefile	/^OBJECTS_TEST = $(OBJS1) $(OBJS2) $(OBJS3)  $(OBJS6)$/;"	m
OBJS1	Makefile	/^OBJS1 = ip_addr.o sock_util.o mempool.o connection.o packet.o thread_fun.o$/;"	m
OBJS2	Makefile	/^OBJS2 = http_basic.o  http_table.o http_header.o  http_api.o http.o\\$/;"	m
OBJS3	Makefile	/^OBJS3 = pat.o acsmx.o sqlite_db.o load_rule.o load_key.o pcre_func.o log_db.o$/;"	m
OBJS5	Makefile	/^OBJS5 = accept.o work.o proxy.o main.o$/;"	m
OBJS6	Makefile	/^OBJS6 = load_cfg.o clock.o cfg_db.o detect_module.o accept.o work2.o proxy2.o main2.o $/;"	m
ONLY_ONE_DECODE	http_decode.h	5;"	d
OPEN_DB_FAIL	sqlite_db.h	25;"	d
OPERATOR_LEN	sqlite_db.h	15;"	d
PACKET_H	packet.h	2;"	d
PCRE_H	pcre_func.h	10;"	d
PERCENT_U00XX	http_decode.c	18;"	d	file:
PERCENT_UFFXX	http_decode.c	23;"	d	file:
PERCENT_XX	http_decode.c	17;"	d	file:
PERCENT_XYY	http_decode.c	19;"	d	file:
PKT_LEN	log_db.h	11;"	d
PREPARE_DB_ERROR	sqlite_db.h	26;"	d
PROXY_H	proxy.h	3;"	d
Pad64	base64.c	/^static const char Pad64 = '=';$/;"	v	file:
QNODE	acsmx.c	/^QNODE;$/;"	t	typeref:struct:_qnode	file:
QUEUE	acsmx.c	/^QUEUE;$/;"	t	typeref:struct:_queue	file:
REGEXP_LEN	sqlite_db.h	16;"	d
RET_FAIL	common.h	15;"	d
RET_OK	common.h	14;"	d
RET_PASS	common.h	16;"	d
RULE_DB	common.h	8;"	d
RULE_SIZE	load_rule.c	10;"	d	file:
SET_AGENT_TARGET	load_rule.h	24;"	d
SET_ARG_TARGET	load_rule.h	20;"	d
SET_BIT	http_decode.h	9;"	d
SET_BIT	load_rule.h	15;"	d
SET_COOKIE_TARGET	load_rule.h	28;"	d
SET_NEED_ESCAPE_DECODE	http_decode.h	21;"	d
SET_NEED_HTML_DECODE	http_decode.h	18;"	d
SET_NEED_URL_DECODE	http_decode.h	15;"	d
SET_URL_TARGET	load_rule.h	17;"	d
SIGNATURE_EXP_TYPE_MATCH	pcre_func.h	17;"	d
SIGNATURE_EXP_TYPE_NO_MATCH	pcre_func.h	16;"	d
SIGNATURE_ID_LEN	sqlite_db.h	9;"	d
SOCK_UTIL_H	sock_util.h	3;"	d
STEP_DB_ERROR	sqlite_db.h	27;"	d
SUB_CLASS_ID_LEN	sqlite_db.h	7;"	d
SUB_IDX	pat.c	38;"	d	file:
SVR_PCRE_CAPTURE_NUM	pcre_func.c	66;"	d	file:
S_LEN	common.h	4;"	d
TARGET_TEST	Makefile	/^TARGET_TEST = proxyd_re$/;"	m
TARGET_TEST_LIBS	Makefile	/^TARGET_TEST_LIBS = -lpcre -lsqlite3  -lpthread -lapr-1  -lmysqlclient $/;"	m
TEXT_DATA_LEN_OVERFLOW	sqlite_db.h	33;"	d
TEXT_LEN_OVERFLOW	sqlite_db.h	34;"	d
THREAD_ACCEPT	thread_fun.h	17;"	d
THREAD_CLOCK	thread_fun.h	22;"	d
THREAD_MAX	thread_fun.h	24;"	d
THREAD_PARSE	thread_fun.h	20;"	d
THREAD_RECV	thread_fun.h	18;"	d
THREAD_SEND	thread_fun.h	21;"	d
THREAD_WORK	thread_fun.h	19;"	d
TOPDIR	Makefile	/^TOPDIR=..$/;"	m
TProxy	proxy.h	13;"	d
T_AEG	load_rule.h	10;"	d
T_AGENT	load_rule.h	11;"	d
T_COOKIE	load_rule.h	12;"	d
T_URL	load_rule.h	9;"	d
VER_ERR	xhttp.c	32;"	d	file:
WAF_PREFIX_NEW	xhttp.h	31;"	d
WHITE_ZH_CN	pat.c	197;"	d	file:
WORK_TIMEOUT	thread_fun.h	14;"	d
_COMMON_H	common.h	2;"	d
_CONNECTION_H	connection.h	2;"	d
_GNU_SOURCE	work2.c	2;"	d	file:
_HTTP_API_H	http_api.h	2;"	d
_HTTP_BASIC_H	http_basic.h	2;"	d
_HTTP_DECODE_H	http_decode.h	2;"	d
_HTTP_HEADER_H_	http_header.h	2;"	d
_HTTP_H_	http.h	2;"	d
_HTTP_MODIFY_H_	http_modify.h	2;"	d
_HTTP_PARSE_H_	xhttp.h	10;"	d
_HTTP_POLL_H	http_poll.h	2;"	d
_HTTP_TABLE_H	http_table.h	2;"	d
_IP_DBG	ip_addr.c	28;"	d	file:
_IP_ERR	ip_addr.c	30;"	d	file:
_IP_ERR	ip_addr.c	33;"	d	file:
_LIB_MULTI_PAT	libmulpat.h	2;"	d
_LOAD_KEY_H	load_key.h	2;"	d
_LOAD_RULE_H	load_rule.h	2;"	d
_MEMPOOL_H	mempool.h	3;"	d
_OP_ALIGN	mempool.c	25;"	d	file:
_OP_ALIGN	mempool.c	27;"	d	file:
_OP_DBG	mempool.c	15;"	d	file:
_OP_ERR	mempool.c	17;"	d	file:
_OP_ERR	mempool.c	20;"	d	file:
_OP_OFFSET	mempool.c	31;"	d	file:
_SK_ERR	sock_util.c	33;"	d	file:
_SK_ERR	sock_util.c	36;"	d	file:
_SOCK_DBG	sock_util.c	31;"	d	file:
_SSN_ERR	connection.c	29;"	d	file:
_SSN_ERR	connection.c	32;"	d	file:
_WAF_SIGNATURE_DB_H	sqlite_db.h	2;"	d
__DETECT_MODULE_H	detect_module.h	3;"	d
_accept	thread_fun.h	/^typedef struct _accept {$/;"	s
_accept_client	accept.c	/^_accept_client(thread_t *t_ctx, int fd, int ssl, ip_port_t *dip)$/;"	f	file:
_accept_init	accept.c	/^_accept_init(thread_t *t_ctx)$/;"	f	file:
_accept_loop	accept.c	/^_accept_loop(thread_t*t_ctx)$/;"	f	file:
_accept_release	accept.c	/^_accept_release(thread_t *t_ctx)$/;"	f	file:
_acsm_pattern	acsmx.h	/^typedef struct _acsm_pattern {      $/;"	s
_addr	ip_addr.h	/^	} _addr;$/;"	m	struct:ip_addr	typeref:union:ip_addr::__anon10
_addr	ip_addr.h	/^	} _addr;$/;"	m	struct:ip_mask	typeref:union:ip_mask::__anon11
_addr	ip_addr.h	/^	} _addr;$/;"	m	struct:ip_port	typeref:union:ip_port::__anon12
_addr	sock_util.h	/^	} _addr;$/;"	m	struct:sk_addr	typeref:union:sk_addr::__anon15
_addr4	ip_addr.h	46;"	d
_addr6	ip_addr.h	47;"	d
_addrsa	sock_util.h	20;"	d
_addrv4	sock_util.h	21;"	d
_addrv6	sock_util.h	22;"	d
_alog_	log_db.h	/^typedef struct _alog_{$/;"	s
_apr_array_test	xhttp.c	/^int _apr_array_test(void)$/;"	f
_boundary_char_check	pat.c	/^int _boundary_char_check(char ch)$/;"	f
_boundary_check	pat.c	/^int _boundary_check(char *name, char *buf, int buf_len, int index, int flag)$/;"	f
_clock_verify	clock.c	/^static int _clock_verify(thread_t *info)$/;"	f	file:
_conf_vps_	cfg_db.h	/^typedef struct _conf_vps_{$/;"	s
_connection_MAGIC	connection.c	13;"	d	file:
_db_log_cfg_	proxy.h	/^typedef struct _db_log_cfg_ {$/;"	s
_escape_append_str	log_db.c	/^static int _escape_append_str( char *des, const char *str, int max )$/;"	f	file:
_g_rsaddr	main2.c	/^static ip_port_t	_g_rsaddr;\/* real server address *\/$/;"	v	file:
_g_svraddr	main2.c	/^static ip_port_t	_g_svraddr;	\/* server address *\/$/;"	v	file:
_g_wafid	main2.c	/^int		_g_wafid;	\/* number of real server *\/$/;"	v
_get_db_ip	load_cfg.c	/^int _get_db_ip(FILE* fp)$/;"	f
_get_db_name	load_cfg.c	/^int _get_db_name(FILE* fp)$/;"	f
_get_db_passwd	load_cfg.c	/^int _get_db_passwd(FILE* fp)$/;"	f
_get_db_user	load_cfg.c	/^int _get_db_user(FILE* fp)$/;"	f
_get_http_str	http_api.c	/^char * _get_http_str(x_str_t str)$/;"	f
_get_http_str_len	http_api.c	/^_get_http_str_len(x_str_t str)$/;"	f
_get_listen_ip	load_cfg.c	/^int _get_listen_ip(FILE* fp)$/;"	f
_get_real_ip	load_cfg.c	/^int _get_real_ip(FILE* fp)$/;"	f
_get_waf_id	load_cfg.c	/^int _get_waf_id(FILE* fp)$/;"	f
_get_waf_thread	load_cfg.c	/^int _get_waf_thread(FILE* fp)$/;"	f
_header_protocol	xhttp.h	/^typedef struct _header_protocol{$/;"	s
_http_	http.h	/^typedef struct _http_{$/;"	s
_http_amf	xhttp.h	/^typedef struct _http_amf{$/;"	s
_http_amfctrl	xhttp.h	/^typedef struct _http_amfctrl{$/;"	s
_http_append_forward	http_modify.c	/^_http_append_forward(http_modify_stream_t* stream,http_t* info,char* ip)$/;"	f	file:
_http_append_gzip	http_modify.c	/^_http_append_gzip(http_modify_stream_t* stream,http_t* info)$/;"	f	file:
_http_append_line	http_modify.c	/^_http_append_line(http_modify_stream_t* stream,char* label,int label_len,char* value,int value_len)$/;"	f	file:
_http_arg	http.h	/^typedef struct _http_arg{$/;"	s
_http_arg	http_poll.h	/^typedef struct _http_arg{$/;"	s
_http_arg	xhttp.h	/^typedef struct _http_arg{$/;"	s
_http_argctrl	http.h	/^typedef struct _http_argctrl{$/;"	s
_http_argctrl	http_poll.h	/^typedef struct _http_argctrl{$/;"	s
_http_argctrl	xhttp.h	/^typedef struct _http_argctrl{$/;"	s
_http_av	xhttp.h	/^typedef struct _http_av{$/;"	s
_http_avctrl	xhttp.h	/^typedef struct _http_avctrl{$/;"	s
_http_bmpat	xhttp.h	/^typedef struct _http_bmpat {$/;"	s
_http_calltbl	xhttp.c	/^typedef struct _http_calltbl$/;"	s	file:
_http_character_to_digit	http_decode.c	/^static int32_t _http_character_to_digit(u_int8_t ch)$/;"	f	file:
_http_check_url	http_modify.c	/^static int _http_check_url(http_t* info,char *data, int data_len,int *begin,int *end)$/;"	f	file:
_http_ckctrl	xhttp.h	/^typedef struct _http_ckctrl{$/;"	s
_http_combuf	xhttp.h	/^typedef struct _http_combuf{$/;"	s
_http_config	xhttp.h	/^typedef struct _http_config{$/;"	s
_http_content_type	http_header.c	/^typedef struct _http_content_type {$/;"	s	file:
_http_cookie	xhttp.h	/^typedef struct _http_cookie{$/;"	s
_http_ctype	xhttp.c	/^typedef struct _http_ctype {$/;"	s	file:
_http_escape_decode_inplace	http_decode.c	/^static int _http_escape_decode_inplace(unsigned char *input, int input_len) {$/;"	f	file:
_http_fctrl	http.h	/^typedef struct _http_fctrl{$/;"	s
_http_fctrl	xhttp.h	/^typedef struct _http_fctrl{$/;"	s
_http_file	http.h	/^typedef struct _http_file{$/;"	s
_http_file	xhttp.h	/^typedef struct _http_file{$/;"	s
_http_get_header_end_line	http_modify.c	/^_http_get_header_end_line( char* data,int data_len,char** begin,char** end)$/;"	f	file:
_http_hctrl	xhttp.h	/^typedef struct _http_hctrl{$/;"	s
_http_header_line	xhttp.h	/^typedef struct _http_header_line{$/;"	s
_http_hline	xhttp.h	/^typedef struct _http_hline{$/;"	s
_http_hstate	http_table.h	/^typedef struct _http_hstate$/;"	s
_http_hstate	xhttp.c	/^typedef struct _http_hstate$/;"	s	file:
_http_html_entities_decode_inplace	http_decode.c	/^static int _http_html_entities_decode_inplace(unsigned char *input, int input_len) {$/;"	f	file:
_http_ignore_param	xhttp.h	/^typedef struct _http_ignore_param {$/;"	s
_http_info	xhttp.h	/^typedef struct _http_info{$/;"	s
_http_insert_line	http_modify.c	/^_http_insert_line(http_modify_stream_t* stream,char* label,int label_len,char* value,int value_len)$/;"	f	file:
_http_int	http.h	/^typedef struct _http_int{$/;"	s
_http_int	xhttp.h	/^typedef struct _http_int{$/;"	s
_http_local	http.h	/^typedef struct _http_local{$/;"	s
_http_local	xhttp.h	/^typedef struct _http_local{$/;"	s
_http_locate_buf	http_modify.c	/^_http_locate_buf(char* data,int data_len,char* front,int front_len,char* back,int back_len,char** begin,char** end)$/;"	f	file:
_http_locate_line_value	http_modify.c	/^_http_locate_line_value(char* data,int data_len,char* label,int label_len,char** begin,char** end)$/;"	f	file:
_http_logic	http.h	/^typedef struct _http_logic{$/;"	s
_http_logic	xhttp.h	/^typedef struct _http_logic{$/;"	s
_http_modify_stream	http_modify.c	/^_http_modify_stream( char* new_data, int max_new_data_len,char* data,int data_len, char* begin,char* end,char* new,int new_len)$/;"	f	file:
_http_para	xhttp.h	/^typedef struct _http_para{$/;"	s
_http_parse_args	http_arg.c	/^int _http_parse_args(http_t* info,char* data,int data_len,int in_url)$/;"	f
_http_parse_args	xhttp.c	/^int _http_parse_args(http_info_t* info,char* data,int data_len,int in_url)$/;"	f
_http_parse_av	xhttp.c	/^_http_parse_av(char* data, int len, http_info_t* info)$/;"	f
_http_parse_node	http_header.c	/^typedef struct _http_parse_node {$/;"	s	file:
_http_parse_node	xhttp.c	/^typedef struct _http_parse_node {$/;"	s	file:
_http_percent_FFxx_decode_backward	http_decode.c	/^static int32_t _http_percent_FFxx_decode_backward(u_int8_t *string, int32_t string_len)$/;"	f	file:
_http_percent_combine	http_decode.c	/^static int32_t _http_percent_combine(u_int8_t *string, int32_t *string_len)$/;"	f	file:
_http_percent_xx_decode_backward	http_decode.c	/^static int32_t _http_percent_xx_decode_backward(u_int8_t *string, int32_t string_len)$/;"	f	file:
_http_print_buf2	http_decode.c	/^static void _http_print_buf2(u_int8_t *buf, int32_t nbuf, u_int32_t column)$/;"	f	file:
_http_remove_auth	http_modify.c	/^_http_remove_auth(http_modify_stream_t* stream,http_t* info)$/;"	f	file:
_http_remove_chunk	http_modify.c	/^_http_remove_chunk(http_modify_stream_t* stream,http_t* info)$/;"	f	file:
_http_remove_cookie	http_modify.c	/^_http_remove_cookie(http_modify_stream_t* stream,http_t* info)$/;"	f	file:
_http_remove_gzip	http_modify.c	/^_http_remove_gzip(http_modify_stream_t* stream,http_t* info)$/;"	f	file:
_http_remove_line	http_modify.c	/^_http_remove_line(http_modify_stream_t* stream,char* line,int len)$/;"	f	file:
_http_replace_auth	http_modify.c	/^_http_replace_auth(http_modify_stream_t* stream,http_t* info,char* auth)$/;"	f	file:
_http_replace_content_len	http_modify.c	/^_http_replace_content_len(http_modify_stream_t* stream,http_t* info,char* len)$/;"	f	file:
_http_replace_host	http_modify.c	/^_http_replace_host(http_modify_stream_t* stream,http_t* info,char* host)$/;"	f	file:
_http_replace_location	http_modify.c	/^_http_replace_location(http_modify_stream_t* stream,http_t* info,char* location)$/;"	f	file:
_http_replace_refer	http_modify.c	/^_http_replace_refer(http_modify_stream_t* stream,http_t* info,char* refer)$/;"	f	file:
_http_reverse_string	http_decode.c	/^static void _http_reverse_string(u_int8_t *string, int32_t string_len)$/;"	f	file:
_http_state	http_table.h	/^typedef struct _http_state$/;"	s
_http_state	xhttp.c	/^typedef struct _http_state$/;"	s	file:
_http_str	http.h	/^typedef struct _http_str{$/;"	s
_http_str	xhttp.h	/^typedef struct _http_str{$/;"	s
_http_string_decode	http_decode.c	/^int32_t _http_string_decode(u_int8_t *out_string, u_int8_t *in_string, int32_t in_string_len,int decode_flag)$/;"	f
_http_string_decode_backward	http_decode.c	/^static int32_t _http_string_decode_backward(u_int8_t *out_string, int32_t *out_len,int tmp_len)$/;"	f	file:
_http_string_decode_type_backward	http_decode.c	/^static int32_t _http_string_decode_type_backward(u_int8_t *string, int32_t *string_len,int tmp_len)$/;"	f	file:
_http_strlen_max	http_modify.c	/^static int _http_strlen_max(const char * str,int max) $/;"	f	file:
_http_table__	http_table.h	/^typedef struct _http_table__$/;"	s
_http_update_host	http_modify.c	/^_http_update_host(http_modify_stream_t* stream,http_t* info,char* host)$/;"	f	file:
_http_update_line	http_modify.c	/^_http_update_line(http_modify_stream_t* stream,char* label,int label_len,char* value,int value_len)$/;"	f	file:
_http_update_location	http_modify.c	/^_http_update_location(http_modify_stream_t* stream,http_t* info,char* location)$/;"	f	file:
_http_update_refer	http_modify.c	/^_http_update_refer(http_modify_stream_t* stream,http_t* info,char* host)$/;"	f	file:
_http_update_url	http_modify.c	/^_http_update_url(http_modify_stream_t* stream,http_t* http_info,char* url)$/;"	f	file:
_ip4_apply_mask	ip_addr.c	/^_ip4_apply_mask(struct in_addr *ip, int cidr)$/;"	f	file:
_ip6_apply_mask	ip_addr.c	/^_ip6_apply_mask(struct in6_addr *ip, int cidr)$/;"	f	file:
_ip_get_cidr	ip_addr.c	/^_ip_get_cidr(const char *str)$/;"	f	file:
_key_data_t	pat.c	/^typedef struct _key_data_t {$/;"	s	file:
_key_node_t	load_key.h	/^typedef struct _key_node_t {$/;"	s
_match_mulpat_target_t	libmulpat.h	/^typedef struct _match_mulpat_target_t {$/;"	s
_match_pattern_rst_t	libmulpat.h	/^typedef struct _match_pattern_rst_t {$/;"	s
_multi_pattern_node_t	libmulpat.h	/^typedef struct _multi_pattern_node_t {$/;"	s
_op_alloc_cache	mempool.c	/^_op_alloc_cache(mempool_t *op)$/;"	f	file:
_op_cache	mempool.c	/^typedef	struct _op_cache {$/;"	s	file:
_op_cache_t	mempool.c	/^} _op_cache_t;$/;"	t	typeref:struct:_op_cache	file:
_op_check_memory	mempool.c	/^_op_check_memory(void)$/;"	f	file:
_op_free_cache	mempool.c	/^_op_free_cache(mempool_t *op, _op_cache_t *cache)$/;"	f	file:
_op_free_cache_list	mempool.c	/^_op_free_cache_list(mempool_t *op)$/;"	f	file:
_op_lock	mempool.c	/^_op_lock(mempool_t *op)$/;"	f	file:
_op_node	mempool.c	/^typedef struct _op_node {$/;"	s	file:
_op_node_t	mempool.c	/^} _op_node_t;$/;"	t	typeref:struct:_op_node	file:
_op_print_cache	mempool.c	/^_op_print_cache(const _op_cache_t *cache)$/;"	f	file:
_op_print_node	mempool.c	/^_op_print_node(const _op_node_t *node)$/;"	f	file:
_op_put_node	mempool.c	/^_op_put_node(mempool_t *op, _op_node_t *node)$/;"	f	file:
_op_unlock	mempool.c	/^_op_unlock(mempool_t *op)$/;"	f	file:
_parse	thread_fun.h	/^typedef struct _parse {$/;"	s
_parse_cmd	main2.c	/^static int _parse_cmd(int argc, char **argv)$/;"	f	file:
_pat_t	load_key.c	/^typedef struct _pat_t {$/;"	s	file:
_proxy_free	proxy2.c	/^_proxy_free(context_t *ctx)$/;"	f	file:
_proxy_init	proxy2.c	/^_proxy_init(context_t *ctx)$/;"	f	file:
_proxy_loop	proxy2.c	/^_proxy_loop(context_t *ctx)$/;"	f	file:
_proxy_stat	proxy2.c	/^_proxy_stat(context_t *ctx)$/;"	f	file:
_qnode	acsmx.c	/^typedef struct _qnode$/;"	s	file:
_queue	acsmx.c	/^typedef struct _queue$/;"	s	file:
_read_update	cfg_db.c	/^int  _read_update(char* table_name, MYSQL_RES **res)$/;"	f
_recv	thread_fun.h	/^typedef struct _recv {$/;"	s
_s_mask_partial	ip_addr.c	/^static u_int8_t _s_mask_partial[9] = {$/;"	v	file:
_send	thread_fun.h	/^typedef struct _send {$/;"	s
_set_target	load_rule.c	/^static int _set_target(char *target, int *i_tar)$/;"	f	file:
_sig_int	proxy2.c	/^_sig_int(int signo)$/;"	f	file:
_sk_addr_from_ip_port	sock_util.c	/^_sk_addr_from_ip_port(sk_addr_t *sk, ip_port_t *ip)$/;"	f	file:
_st_get_free_id	connection.c	/^_st_get_free_id(connection_table_t *st)$/;"	f	file:
_sub_log_	log_db.h	/^typedef struct _sub_log_{$/;"	s
_t_log_t	log_db.h	/^typedef struct _t_log_t{$/;"	s
_update_traffic	clock.c	/^static int _update_traffic(thread_t *info)$/;"	f	file:
_update_vps_node	cfg_db.c	/^int _update_vps_node(int rid, int act)$/;"	f
_usage	main2.c	/^static void _usage(void)$/;"	f	file:
_work	thread_fun.h	/^typedef struct _work {$/;"	s
_work_alloc_connection	work2.c	/^_work_alloc_connection(thread_t *t_ctx)$/;"	f	file:
_work_check_server	work2.c	/^_work_check_server(thread_t *t_ctx, connection_t *s)$/;"	f	file:
_work_clean_connection	work2.c	/^_work_clean_connection(thread_t *t_ctx, connection_t *s, connection_queue_t *q)$/;"	f	file:
_work_free	work2.c	/^_work_free(thread_t *t_ctx)$/;"	f	file:
_work_free_connection	work2.c	/^_work_free_connection(thread_t *t_ctx, connection_t *s)$/;"	f	file:
_work_get_connection	work2.c	/^_work_get_connection(thread_t *t_ctx)$/;"	f	file:
_work_get_packet	work2.c	/^_work_get_packet(thread_t *t_ctx, connection_t *s, connection_queue_t *q)$/;"	f	file:
_work_get_server	work2.c	/^_work_get_server(thread_t *t_ctx, connection_t *s)$/;"	f	file:
_work_init	work2.c	/^_work_init(thread_t *t_ctx)$/;"	f	file:
_work_loop	work2.c	/^_work_loop(thread_t *t_ctx)$/;"	f	file:
_work_parse_client	work2.c	/^_work_parse_client(thread_t *t_ctx, connection_t *conn)$/;"	f	file:
_work_parse_server	work2.c	/^_work_parse_server(thread_t *t_ctx, connection_t *s)$/;"	f	file:
_work_process_client	work2.c	/^_work_process_client(thread_t *t_ctx, connection_t *s)$/;"	f	file:
_work_process_server	work2.c	/^_work_process_server(thread_t *t_ctx, connection_t *s)$/;"	f	file:
_work_recv_data	work2.c	/^_work_recv_data(thread_t *t_ctx)$/;"	f	file:
_work_recvfrom_client	work2.c	/^_work_recvfrom_client(thread_t *t_ctx, connection_t *s)$/;"	f	file:
_work_recvfrom_server	work2.c	/^_work_recvfrom_server(thread_t *t_ctx, connection_t *s)$/;"	f	file:
_work_send_data	work2.c	/^_work_send_data(thread_t *t_ctx) $/;"	f	file:
_work_sendto_client	work2.c	/^_work_sendto_client(thread_t *t_ctx, connection_t *s)$/;"	f	file:
_work_sendto_server	work2.c	/^_work_sendto_server(thread_t *t_ctx, connection_t *s)$/;"	f	file:
_workfd	thread_fun.h	/^typedef struct _workfd {$/;"	s
abs_url_flag	http.h	/^        int             abs_url_flag;$/;"	m	struct:_http_local
abs_url_flag	xhttp.h	/^	int		abs_url_flag;$/;"	m	struct:_http_local
ac_req	load_key.c	/^ACSM_STRUCT *ac_req;$/;"	v
ac_resp	load_key.c	/^ACSM_STRUCT *ac_resp;$/;"	v
accept	proxy.h	/^	thread_t	accept;		\/* the accept thread *\/$/;"	m	struct:context
accept_encoding	xhttp.h	/^	http_str_t	accept_encoding;\/* Accept encoding *\/$/;"	m	struct:_header_protocol
accept_run	accept.c	/^accept_run(void *args)$/;"	f
accept_t	thread_fun.h	/^} accept_t;$/;"	t	typeref:struct:_accept
acsmAddPattern	acsmx.c	/^acsmAddPattern (ACSM_STRUCT * p, unsigned char *pat, int n, int nocase,$/;"	f
acsmBuildMatchStateTrees	acsmx.c	/^static int acsmBuildMatchStateTrees( ACSM_STRUCT * acsm, $/;"	f	file:
acsmCompile	acsmx.c	/^acsmCompile (ACSM_STRUCT * acsm$/;"	f
acsmFree	acsmx.c	/^acsmFree (ACSM_STRUCT * acsm) $/;"	f
acsmMaxStates	acsmx.h	/^	int acsmMaxStates;  $/;"	m	struct:__anon2
acsmNew	acsmx.c	/^ACSM_STRUCT * acsmNew () $/;"	f
acsmNumStates	acsmx.h	/^	int acsmNumStates;  $/;"	m	struct:__anon2
acsmPatterns	acsmx.h	/^	ACSM_PATTERN    * acsmPatterns;$/;"	m	struct:__anon2
acsmPrintDetailInfo	acsmx.c	/^int acsmPrintDetailInfo(ACSM_STRUCT * p)$/;"	f
acsmPrintSummaryInfo	acsmx.c	/^int acsmPrintSummaryInfo(void)$/;"	f
acsmSearch	acsmx.c	/^acsmSearch (ACSM_STRUCT * acsm, unsigned char *Tx, int n,$/;"	f
acsmStateTable	acsmx.h	/^	ACSM_STATETABLE * acsmStateTable;$/;"	m	struct:__anon2
action	cfg_db.h	/^	int action; \/\/alert or deny$/;"	m	struct:_conf_vps_
action	log_db.h	/^        int 	action;$/;"	m	struct:_alog_
add_field	sqlite_db.c	/^int add_field ( struct waf_signature_search_object *db_obj,unsigned short data_type,unsigned int max_data_len )$/;"	f
add_field	sqlite_db.h	/^	int ( *add_field )( struct waf_signature_search_object *,unsigned short data_type,unsigned int max_data_len );$/;"	m	struct:waf_signature_search_object
addr	thread_fun.h	/^	ip_addr_t       addr;           \/* client addres *\/$/;"	m	struct:_workfd
agent	http.h	/^        x_str_t      agent; $/;"	m	struct:_http_str
agent	log_db.h	/^        char 	agent[M_LEN-1];$/;"	m	struct:_alog_
agent	xhttp.h	/^	http_str_t	agent;		\/* User-Agent value *\/$/;"	m	struct:_header_protocol
allarg_len	xhttp.h	/^	u_int16_t	allarg_len;	\/* all argument length *\/$/;"	m	struct:_http_int
alog_t	log_db.h	/^}alog_t;$/;"	t	typeref:struct:_alog_
amf	xhttp.h	/^	http_amfctrl_t	amf;$/;"	m	struct:_http_para
amf	xhttp.h	/^	int		amf;$/;"	m	struct:_http_config
amf_cache_size	xhttp.h	/^        int             amf_cache_size;$/;"	m	struct:_http_config
amf_error	http.h	/^        int             amf_error;$/;"	m	struct:_http_local
amf_error	xhttp.h	/^	int 		amf_error;$/;"	m	struct:_http_local
arg	http.h	/^	http_arg_ctrl_t arg;$/;"	m	struct:_http_
arg	http.h	/^        http_arg_t      arg[32];$/;"	m	struct:_http_argctrl
arg	http_poll.h	/^	http_arg_t 	arg[32];$/;"	m	struct:_http_argctrl
arg	xhttp.h	/^	http_argctrl_t	arg;$/;"	m	struct:_http_para
arg_flag	http.h	/^        int             arg_flag;$/;"	m	struct:_http_arg
arg_flag	http_poll.h	/^        int             arg_flag;$/;"	m	struct:_http_arg
arg_flag	xhttp.h	/^	int		arg_flag;$/;"	m	struct:_http_arg
args_buf_error	http.h	/^        int             args_buf_error;$/;"	m	struct:_http_local
args_buf_error	xhttp.h	/^	int 		args_buf_error;$/;"	m	struct:_http_local
args_max	xhttp.h	/^	int		args_max;$/;"	m	struct:_http_config
array	xhttp.h	/^	apr_array_header_t *array;$/;"	m	struct:_http_ckctrl
array	xhttp.h	/^	apr_array_header_t *array;$/;"	m	struct:_http_hctrl
array	xhttp.h	/^	apr_array_header_t* array;$/;"	m	struct:_http_amfctrl
array	xhttp.h	/^	apr_array_header_t* array;$/;"	m	struct:_http_argctrl
array	xhttp.h	/^	apr_array_header_t* array;$/;"	m	struct:_http_avctrl
array	xhttp.h	/^	apr_array_header_t* array;$/;"	m	struct:_http_fctrl
asp_net	xhttp.h	/^	http_str_t	asp_net;	\/* Asp-Net value *\/$/;"	m	struct:_header_protocol
attack_msg	pat.c	/^char  attack_msg[MSG_IDX][32] = {$/;"	v
auth	http.h	/^        x_str_t      auth; $/;"	m	struct:_http_str
auth	http_modify.h	/^        char* auth;$/;"	m	struct:http_header_modify_
auth	xhttp.h	/^	http_str_t	auth;		\/* Auth value *\/$/;"	m	struct:_header_protocol
auth_len	http_modify.h	/^	int auth_len;$/;"	m	struct:http_header_modify_
auth_pass	http.h	/^        x_str_t      auth_pass; $/;"	m	struct:_http_str
auth_pass	xhttp.h	/^	http_str_t	auth_pass;	\/* Auth-Password value *\/$/;"	m	struct:_header_protocol
auth_user	http.h	/^        x_str_t      auth_user; $/;"	m	struct:_http_str
auth_user	xhttp.h	/^	http_str_t	auth_user;	\/* Auth-Username value *\/$/;"	m	struct:_header_protocol
av	xhttp.h	/^	http_avctrl_t	av;$/;"	m	struct:_http_para
b64_decode	base64.c	/^b64_decode(char const *src, u_char *target, size_t targsize)$/;"	f
b64_encode	base64.c	/^b64_encode(u_char const *src, size_t srclength, char *target, size_t targsize)$/;"	f
bcShift	acsmx.h	/^        short bcShift[256];$/;"	m	struct:__anon2
bcSize	acsmx.h	/^        int   bcSize;$/;"	m	struct:__anon2
begin	xhttp.h	/^	int		begin;$/;"	m	struct:_http_hline
bit_map	libmulpat.h	/^	unsigned char bit_map[MAX_BIT_MAP_UNIT];$/;"	m	struct:_match_pattern_rst_t
blen_0	xhttp.h	/^	u_int16_t	blen_0;		\/* Request Body length *\/$/;"	m	struct:_http_int
blen_1	xhttp.h	/^	u_int16_t	blen_1;		\/* Response Body length *\/$/;"	m	struct:_http_int
blkpkt	connection.h	/^	packet_t	*blkpkt;	\/* blocked packet *\/$/;"	m	struct:connection_queue
blkq	thread_fun.h	/^	pktq_t		blkq;$/;"	m	struct:_send
body_len	http.h	/^	int 		body_len;$/;"	m	struct:_http_int
border_flag	libmulpat.h	/^	unsigned int border_flag;$/;"	m	struct:_multi_pattern_node_t
boundary	http.h	/^	x_str_t      boundary;$/;"	m	struct:_http_str
boundary	xhttp.h	/^	http_str_t	boundary;	\/* Post boundary *\/$/;"	m	struct:_header_protocol
boundary_cnt	http.h	/^        int             boundary_cnt;$/;"	m	struct:_http_local
boundary_cnt	xhttp.h	/^	int 		boundary_cnt;$/;"	m	struct:_http_local
buf	xhttp.h	/^        char		*buf;$/;"	m	struct:_http_combuf
buf	xhttp.h	/^        http_combuf_t	buf;$/;"	m	struct:_http_amfctrl
buf	xhttp.h	/^        http_combuf_t	buf;$/;"	m	struct:_http_argctrl
buf	xhttp.h	/^        http_combuf_t	buf;$/;"	m	struct:_http_hctrl
cache	mempool.c	/^	_op_cache_t	*cache;		\/* the cache it belongs *\/$/;"	m	struct:_op_node	file:
cache_buf	http.h	/^        char            cache_buf[512];$/;"	m	struct:_http_local
cache_buf	xhttp.h	/^	char		cache_buf[512];$/;"	m	struct:_http_local
cache_buf_len	http.h	/^        int             cache_buf_len;$/;"	m	struct:_http_local
cache_buflen	xhttp.h	/^	int		cache_buflen;$/;"	m	struct:_http_local
cache_list	mempool.h	/^	void		*cache_list;	\/* the cache list *\/$/;"	m	struct:mempool
capacity	mempool.c	/^	u_int32_t	capacity;	\/* total number in cache *\/$/;"	m	struct:_op_cache	file:
capacity	packet.h	/^	u_int16_t	capacity;	\/* capacity of packet *\/$/;"	m	struct:packet
casepatrn	acsmx.h	/^    unsigned char         *casepatrn;$/;"	m	struct:_acsm_pattern
catalog	load_rule.c	/^	char catalog[MAX_TXT_LEN2];$/;"	m	struct:sec_rule_t	file:
catalog	load_rule.h	/^	char catalog[MAX_TXT_LEN2];$/;"	m	struct:rule_node_t
catalog	log_db.h	/^	char catalog[MAX_TXT_LEN2];$/;"	m	struct:_sub_log_
catalog	log_db.h	/^    	char    catalog[MAX_TXT_LEN2];    $/;"	m	struct:_alog_
cert_flag	http.h	/^        int             cert_flag;$/;"	m	struct:_http_local
cert_flag	xhttp.h	/^	int		cert_flag; $/;"	m	struct:_http_local
cfg	xhttp.h	/^	http_config_t	cfg;		\/* config *\/$/;"	m	struct:_http_info
cfg_real_flag	xhttp.h	/^	int		cfg_real_flag;$/;"	m	struct:_http_config
cfg_vps	cfg_db.c	/^cfg_vps_t *cfg_vps = NULL;$/;"	v
cfg_vps_t	cfg_db.h	/^}cfg_vps_t;$/;"	t	typeref:struct:_conf_vps_
cfglock	proxy.h	/^	pthread_rwlock_t  cfglock;$/;"	m	struct:context
chain	load_rule.c	/^	char chain[MAX_TXT_LEN2];$/;"	m	struct:sec_rule_t	file:
chain	load_rule.h	/^	char chain[MAX_TXT_LEN2];$/;"	m	struct:rule_node_t
chain_used	sqlite_db.h	/^	unsigned short chain_used;$/;"	m	struct:data_record_t
change_flag	http_modify.h	/^        int change_flag;$/;"	m	struct:http_modify_stream
check_cfg_update	cfg_db.c	/^int check_cfg_update()$/;"	f
check_error	xhttp.c	/^int  check_error(http_info_t* info)	$/;"	f
check_hex_encode	pat.c	/^int check_hex_encode(char *src, char *dst)$/;"	f
chunk_flag	http.h	/^        int             chunk_flag;$/;"	m	struct:_http_local
chunk_flag	xhttp.h	/^	int		chunk_flag;$/;"	m	struct:_http_local
cidr	ip_addr.h	/^	u_int32_t cidr;			\/* CIDR netmask *\/$/;"	m	struct:ip_mask
class_name	xhttp.h	/^	http_str_t	class_name;$/;"	m	struct:_http_amf
clear_data_record	sqlite_db.c	/^void clear_data_record( struct waf_signature_search_object *db_obj )$/;"	f
clen_0	xhttp.h	/^	u_int32_t	clen_0;		\/* Request Content-Length *\/$/;"	m	struct:_http_int
clen_1	xhttp.h	/^	u_int32_t	clen_1;		\/* Response Content-Length *\/$/;"	m	struct:_http_int
clen_isset_0	http.h	/^        int             clen_isset_0;$/;"	m	struct:_http_local
clen_isset_0	xhttp.h	/^	int		clen_isset_0;$/;"	m	struct:_http_local
clen_isset_1	http.h	/^        int             clen_isset_1;$/;"	m	struct:_http_local
clen_isset_1	xhttp.h	/^	int		clen_isset_1;$/;"	m	struct:_http_local
cliaddr	connection.h	/^	ip_addr_t       cliaddr;        \/* client address *\/$/;"	m	struct:connection
cliaddr	connection.h	/^	ip_port_t	cliaddr;	\/* client address *\/$/;"	m	struct:connection_tup
clifd	connection.h	/^	int		clifd;		\/* client socket *\/$/;"	m	struct:connection
clifd	connection.h	/^	int		clifd;		\/* the client fd *\/$/;"	m	struct:connection_tup
cliport	connection.h	/^	u_int16_t       cliport;        \/* client port *\/$/;"	m	struct:connection
cliq	connection.h	/^	connection_queue_t	cliq;		\/* client packet queue *\/$/;"	m	struct:connection
clirecv	log_db.h	/^	u_int64_t clirecv;$/;"	m	struct:_t_log_t
clock	proxy.h	/^	thread_t	clock;		\/* the accept thread *\/$/;"	m	struct:context
clock_run	clock.c	/^void *clock_run(void *arg)$/;"	f
cnt	pat.c	/^	int cnt;$/;"	m	struct:_key_data_t	file:
complete_flag	http.h	/^        int 		complete_flag;$/;"	m	struct:_http_arg
complete_flag	http.h	/^        int complete_flag;$/;"	m	struct:_http_file
complete_flag	http_poll.h	/^        int complete_flag;$/;"	m	struct:_http_arg
complete_flag	xhttp.h	/^	int complete_flag;$/;"	m	struct:_http_arg
complete_flag	xhttp.h	/^	int complete_flag;$/;"	m	struct:_http_file
connect_remote	sock_util.c	/^connect_remote(struct sockaddr_storage *remote_addr, int *wait)$/;"	f
connection	connection.h	/^typedef struct connection {$/;"	s
connection_print	connection.c	/^connection_print(const connection_t *s)$/;"	f
connection_queue	connection.h	/^typedef struct connection_queue {$/;"	s
connection_queue_t	connection.h	/^} connection_queue_t;$/;"	t	typeref:struct:connection_queue
connection_t	connection.h	/^} connection_t;$/;"	t	typeref:struct:connection
connection_table	connection.h	/^typedef struct connection_table {$/;"	s
connection_table_add	connection.c	/^connection_table_add(connection_table_t *t, connection_t *s)$/;"	f
connection_table_alloc	connection.c	/^connection_table_alloc(size_t max)$/;"	f
connection_table_del	connection.c	/^connection_table_del(connection_table_t *t, int id)$/;"	f
connection_table_find	connection.c	/^connection_table_find(connection_table_t *t, int id)$/;"	f
connection_table_free	connection.c	/^connection_table_free(connection_table_t *t)$/;"	f
connection_table_lock	connection.c	/^connection_table_lock(connection_table_t *t)$/;"	f
connection_table_print	connection.c	/^connection_table_print(connection_table_t *t)$/;"	f
connection_table_t	connection.h	/^} connection_table_t;$/;"	t	typeref:struct:connection_table
connection_table_unlock	connection.c	/^connection_table_unlock(connection_table_t *t)$/;"	f
connection_tup	connection.h	/^typedef struct connection_tup {$/;"	s
connection_tup_compare	connection.c	/^connection_tup_compare(connection_tup_t *tup1, connection_tup_t *tup2)$/;"	f
connection_tup_t	connection.h	/^} connection_tup_t;$/;"	t	typeref:struct:connection_tup
content_len	http.h	/^	int 		content_len;$/;"	m	struct:_http_int
content_len	http_modify.h	/^        char* content_len;$/;"	m	struct:http_header_modify_
content_len_len	http_modify.h	/^	int content_len_len;$/;"	m	struct:http_header_modify_
content_type	http.h	/^	int		content_type;$/;"	m	struct:_http_logic
content_type	http.h	/^	x_str_t      content_type;$/;"	m	struct:_http_str
context	proxy.h	/^typedef struct context {$/;"	s
context_t	proxy.h	/^} context_t;$/;"	t	typeref:struct:context
cookie	http.h	/^	x_str_t      cookie;$/;"	m	struct:_http_str
cookie	log_db.h	/^		char 	cookie[L_LEN-1];$/;"	m	struct:_alog_
cookie_0	xhttp.h	/^	http_ckctrl_t	cookie_0;$/;"	m	struct:_http_para
cookie_1	xhttp.h	/^	http_ckctrl_t	cookie_1;$/;"	m	struct:_http_para
count	acsmx.c	/^  int count;$/;"	m	struct:_queue	file:
ctype_0	xhttp.h	/^	http_str_t	ctype_0;	\/* The content-Type str *\/$/;"	m	struct:_header_protocol
ctype_0	xhttp.h	/^        short		ctype_0;	\/* request content-type *\/$/;"	m	struct:_http_logic
ctype_1	xhttp.h	/^	http_str_t	ctype_1;	\/* The content-Type str *\/$/;"	m	struct:_header_protocol
ctype_1	xhttp.h	/^        short		ctype_1;	\/* response content-type *\/$/;"	m	struct:_http_logic
cur	http.h	/^        http_arg_t      *cur;$/;"	m	struct:_http_argctrl
cur	http.h	/^        http_file_t*    cur;$/;"	m	struct:_http_fctrl
cur	http_poll.h	/^        http_arg_t      *cur;$/;"	m	struct:_http_argctrl
cur	xhttp.h	/^	http_amf_t	*cur;$/;"	m	struct:_http_amfctrl
cur	xhttp.h	/^	http_arg_t	*cur;$/;"	m	struct:_http_argctrl
cur	xhttp.h	/^	http_av_t	*cur;$/;"	m	struct:_http_avctrl
cur	xhttp.h	/^	http_cookie_t	*cur;$/;"	m	struct:_http_ckctrl
cur	xhttp.h	/^	http_file_t*	cur;$/;"	m	struct:_http_fctrl
cur	xhttp.h	/^	http_hline_t	*cur;$/;"	m	struct:_http_hctrl
current	xhttp.h	/^        u_int32_t	current;$/;"	m	struct:_http_combuf
data	http_modify.h	/^        char* data;$/;"	m	struct:http_modify_stream
data	libmulpat.h	/^	char *data;$/;"	m	struct:_match_pattern_rst_t
data	packet.h	/^	char		data[0];	\/* ata in packet *\/$/;"	m	struct:packet
data	sqlite_db.h	/^	void *data;$/;"	m	struct:data_record_t
data	xhttp.h	/^	char		*data;		\/* the data *\/$/;"	m	struct:_http_info
data_flag	http.h	/^        int             data_flag;$/;"	m	struct:_http_local
data_flag	xhttp.h	/^	int		data_flag;$/;"	m	struct:_http_local
data_len	http_modify.h	/^        int data_len;$/;"	m	struct:http_modify_stream
data_len	libmulpat.h	/^	int data_len;$/;"	m	struct:_match_pattern_rst_t
data_record_t	sqlite_db.h	/^typedef struct data_record_t$/;"	s
data_record_t	sqlite_db.h	/^}data_record_t;$/;"	t	typeref:struct:data_record_t
data_set_buf	xhttp.c	/^int  data_set_buf(int flag,http_combuf_t* buf,char** data,int *data_len,int max_len,char* value,int value_len,http_info_t* info)$/;"	f
data_type	sqlite_db.h	/^	unsigned short data_type;$/;"	m	struct:field_info_t
db	sqlite_db.h	/^	sqlite3 *db;$/;"	m	struct:waf_signature_search_object
db_close	sqlite_db.c	/^void db_close( sqlite3 *db )$/;"	f
db_ip	proxy.h	/^	char db_ip[32];$/;"	m	struct:_db_log_cfg_
db_log_cfg_t	proxy.h	/^}db_log_cfg_t;$/;"	t	typeref:struct:_db_log_cfg_
db_name	proxy.h	/^	char db_name[32];$/;"	m	struct:_db_log_cfg_
db_open	sqlite_db.c	/^int db_open( sqlite3 **db ,char *db_name)$/;"	f
db_passwd	proxy.h	/^	char db_passwd[32];$/;"	m	struct:_db_log_cfg_
db_user	proxy.h	/^	char db_user[32];$/;"	m	struct:_db_log_cfg_
dbglvl	proxy.h	/^	int			dbglvl;		\/* debug level *\/$/;"	m	struct:context
dcfg	proxy.h	/^	db_log_cfg_t  dcfg;$/;"	m	struct:context
decode_flag	http.h	/^        int             decode_flag;$/;"	m	struct:_http_arg
decode_flag	xhttp.h	/^	int		decode_flag;$/;"	m	struct:_http_config
depth	acsmx.h	/^    int      depth;$/;"	m	struct:_acsm_pattern
detect_entry	detect_module.h	/^	int ( *detect_entry )(http_t *p_http, connection_t *conn);$/;"	m	struct:module_detect_t
dir	http.h	/^        int             dir;            \/* direct: request\/response *\/$/;"	m	struct:_http_logic
dir	xhttp.h	/^	int		dir;		\/* direct: request\/response *\/$/;"	m	struct:_http_logic
disable	load_rule.h	/^	int disable;$/;"	m	struct:rule_node_t
do_http_parse_test	detect_module.c	/^int do_http_parse_test(http_t *p_http, char *buf , int len)$/;"	f
domain	xhttp.h	/^	http_str_t	domain;$/;"	m	struct:_http_cookie
dst_ip	log_db.h	/^        char 	dst_ip[24];$/;"	m	struct:_alog_
dst_port	log_db.h	/^        int 	dst_port;$/;"	m	struct:_alog_
error	xhttp.h	/^	int 		error;$/;"	m	struct:_http_info
error_line	xhttp.h	/^	int	error_line;$/;"	m	struct:_http_info
events	thread_fun.h	/^	struct epoll_event *events;	\/* events for epoll *\/$/;"	m	struct:_work	typeref:struct:_work::epoll_event
events	thread_fun.h	/^	struct epoll_event *events;$/;"	m	struct:_recv	typeref:struct:_recv::epoll_event
events	thread_fun.h	/^	struct epoll_event *events;$/;"	m	struct:_send	typeref:struct:_send::epoll_event
expire	xhttp.h	/^	http_str_t	expire;$/;"	m	struct:_http_cookie
extern_flag	http_poll.h	/^        int             extern_flag;$/;"	m	struct:_http_argctrl
extern_flag	xhttp.h	/^	int 		extern_flag;$/;"	m	struct:_http_argctrl
extern_flag	xhttp.h	/^	int 		extern_flag;$/;"	m	struct:_http_hctrl
fail_record	sqlite_db.h	/^	unsigned short fail_record;$/;"	m	struct:waf_signature_search_object
family	ip_addr.h	/^	int		family;		\/* AF_INET, AF_INET6 *\/$/;"	m	struct:ip_port
family	ip_addr.h	/^	int	family;			\/* AF_INET, AF_INET6 *\/$/;"	m	struct:ip_addr
family	ip_addr.h	/^	int	family;			\/* AF_INET, AF_INET6 *\/$/;"	m	struct:ip_mask
fd	thread_fun.h	/^	int		fd;		\/* client fd *\/$/;"	m	struct:_workfd
field_info_t	sqlite_db.h	/^typedef struct field_info_t$/;"	s
field_info_t	sqlite_db.h	/^}field_info_t;$/;"	t	typeref:struct:field_info_t
field_list	sqlite_db.h	/^	field_info_t field_list[ MAX_FIELD_NUMBER ];$/;"	m	struct:waf_signature_search_object
field_list_sz	sqlite_db.h	/^	unsigned short field_list_sz;$/;"	m	struct:waf_signature_search_object
file	http.h	/^	http_file_ctrl_t file;$/;"	m	struct:_http_
file	http.h	/^        http_file_t    file[8];$/;"	m	struct:_http_fctrl
file	xhttp.h	/^	http_fctrl_t	file;$/;"	m	struct:_http_para
file_num_error	http.h	/^        int             file_num_error;$/;"	m	struct:_http_local
file_num_error	xhttp.h	/^	int 		file_num_error;$/;"	m	struct:_http_local
fill_record	sqlite_db.c	/^data_record_t  *fill_record( struct waf_signature_search_object *db_obj,sqlite3_stmt *stat,int *err,data_record_t *previous,int data_len )$/;"	f
flag	load_key.c	/^	int  flag;$/;"	m	struct:_pat_t	file:
flag	load_key.h	/^        unsigned int flag; $/;"	m	struct:_key_node_t
flag	xhttp.h	/^	int		flag;$/;"	m	struct:_http_hline
force_decode	http.h	/^        int             force_decode;$/;"	m	struct:_http_local
force_decode	xhttp.h	/^	int		force_decode;$/;"	m	struct:_http_local
form_flag	http.h	/^        int             form_flag;$/;"	m	struct:_http_local
form_flag	xhttp.h	/^	int		form_flag;$/;"	m	struct:_http_local
form_header_state	http.h	/^        int             form_header_state;$/;"	m	struct:_http_local
form_header_state	xhttp.h	/^	int 		form_header_state;$/;"	m	struct:_http_local
form_status	http.h	/^        int             form_status;$/;"	m	struct:_http_local
form_status	xhttp.h	/^	int		form_status;$/;"	m	struct:_http_local
freeid	connection.h	/^	int		freeid;		\/* the freed index *\/$/;"	m	struct:connection_table
fullurl	xhttp.h	/^	http_str_t	fullurl;	\/* decoded URL, include args *\/$/;"	m	struct:_header_protocol
func	http_header.c	/^        http_parse_func_t func;$/;"	m	struct:_http_parse_node	file:
func	http_table.h	/^        http_func_t     func;$/;"	m	struct:_http_state
func	http_table.h	/^        http_func_t     func;$/;"	m	struct:_http_table__
func	xhttp.c	/^	http_parse_func_t func;$/;"	m	struct:_http_parse_node	file:
func	xhttp.c	/^        http_func_t	func;$/;"	m	struct:_http_calltbl	file:
func	xhttp.c	/^        http_func_t	func;$/;"	m	struct:_http_state	file:
g_action	detect_module.c	/^int  g_action = -1;$/;"	v
g_case	detect_module.c	/^int  g_case = 0;$/;"	v
g_cfg	proxy2.c	/^context_t		g_cfg;$/;"	v
g_clock	clock.c	/^unsigned long long g_clock = 0;$/;"	v
get_as_param	xhttp.c	/^int get_as_param(http_info_t* info)$/;"	f
get_ori_ip	xhttp.c	/^int get_ori_ip(char *begin, char *end, http_info_t* info)$/;"	f
get_pkt_buf	connection.c	/^char* get_pkt_buf(connection_t *conn, int *len, int dir)$/;"	f
get_post_boundary	http_header.c	/^int get_post_boundary(char *begin, char *end, http_t *info)$/;"	f
get_post_boundary	xhttp.c	/^int get_post_boundary(char *begin, char *end, http_info_t *info)$/;"	f
get_transfer_encoding	xhttp.c	/^int get_transfer_encoding(http_info_t* info)$/;"	f
have_8341	http.h	/^        int             have_8341;$/;"	m	struct:_http_local
have_8341	xhttp.h	/^	int		have_8341;$/;"	m	struct:_http_local
have_general_keyword	libmulpat.h	/^	char have_general_keyword;$/;"	m	struct:_match_pattern_rst_t
head	acsmx.c	/^  QNODE * head, *tail;$/;"	m	struct:_queue	file:
head	packet.h	/^	packet_t	*head;$/;"	m	struct:pktq
header_0	xhttp.h	/^	http_hctrl_t	header_0;$/;"	m	struct:_http_para
header_1	xhttp.h	/^	http_hctrl_t	header_1;$/;"	m	struct:_http_para
header_buf_error	http.h	/^        int             header_buf_error;$/;"	m	struct:_http_local
header_buf_error	xhttp.h	/^	int 		header_buf_error;$/;"	m	struct:_http_local
header_cookie_num	http.h	/^	int 		header_cookie_num;$/;"	m	struct:_http_int
header_len	http.h	/^	int 		header_len;$/;"	m	struct:_http_int
header_line_num	http.h	/^	int 		header_line_num;$/;"	m	struct:_http_int
header_max	xhttp.h	/^	int		header_max;$/;"	m	struct:_http_config
header_range_num	http.h	/^	int 		header_range_num;$/;"	m	struct:_http_int
hint	detect_module.c	/^char hint[MD_COUNT][64] ={$/;"	v
hint	xhttp.h	/^	http_int_t	hint;$/;"	m	struct:_http_para
hlen_0	xhttp.h	/^	u_int16_t	hlen_0;		\/* Request Header length *\/$/;"	m	struct:_http_int
hlen_1	xhttp.h	/^	u_int16_t	hlen_1;		\/* Response Header length *\/$/;"	m	struct:_http_int
host	http.h	/^        x_str_t      host; $/;"	m	struct:_http_str
host	http_modify.h	/^	char* host;$/;"	m	struct:http_header_modify_
host	log_db.h	/^        char 	host[M_LEN];$/;"	m	struct:_alog_
host	xhttp.h	/^	http_str_t	host;		\/* decoded Host *\/$/;"	m	struct:_header_protocol
host_len	http_modify.h	/^	int host_len;$/;"	m	struct:http_header_modify_
http	xhttp.h	/^	http_para_t	*http;		\/* http parameters *\/$/;"	m	struct:_http_info
http_abs_url_check	xhttp.c	/^int http_abs_url_check(http_info_t* info,char* url,int url_len)$/;"	f
http_add_body_len	xhttp.c	/^int http_add_body_len(http_info_t* info,int len)$/;"	f
http_add_cookie_num	xhttp.c	/^int http_add_cookie_num(http_info_t* info)$/;"	f
http_add_header_len	xhttp.c	/^int http_add_header_len(http_info_t* info,int len)$/;"	f
http_add_header_num	xhttp.c	/^int http_add_header_num(http_info_t* info)$/;"	f
http_add_un_recv_len	xhttp.c	/^int http_add_un_recv_len(http_info_t* info,int len)$/;"	f
http_amf_t	xhttp.h	/^} http_amf_t;$/;"	t	typeref:struct:_http_amf
http_amfctrl_t	xhttp.h	/^} http_amfctrl_t;$/;"	t	typeref:struct:_http_amfctrl
http_append_arg	http_arg.c	/^int http_append_arg(char* value,int value_len,http_t* info,http_arg_t* item)$/;"	f
http_append_arg	xhttp.c	/^http_append_arg(char* value,int value_len,http_info_t* info,http_arg_t* item)$/;"	f
http_append_data_buf	xhttp.c	/^http_append_data_buf(http_combuf_t* buf,char** data,int *data_len, $/;"	f
http_append_file	http_form.c	/^int http_append_file(char* value,int value_len,http_t* info,http_file_t* item)$/;"	f
http_append_file	xhttp.c	/^int http_append_file(char* value,int value_len,http_info_t* info,http_file_t* item)$/;"	f
http_append_gzip	http_modify.c	/^int http_append_gzip(http_header_modify_t* pak,http_modify_stream_t* stream,http_t* info)$/;"	f
http_append_str	http_basic.c	/^int http_append_str(http_t* info,x_str_t* str,char* data,int len)$/;"	f
http_append_str	xhttp.c	/^int http_append_str(http_info_t* info,http_str_t* str,char* data,int len)$/;"	f
http_append_xff	http_modify.c	/^int http_append_xff(http_header_modify_t* pak,http_modify_stream_t* stream,http_t* info)$/;"	f
http_arg_ctrl_t	http.h	/^}http_arg_ctrl_t;$/;"	t	typeref:struct:_http_argctrl
http_arg_ctrl_t	http_poll.h	/^}http_arg_ctrl_t;$/;"	t	typeref:struct:_http_argctrl
http_arg_t	http.h	/^} http_arg_t;$/;"	t	typeref:struct:_http_arg
http_arg_t	http_poll.h	/^} http_arg_t;$/;"	t	typeref:struct:_http_arg
http_arg_t	xhttp.h	/^} http_arg_t;$/;"	t	typeref:struct:_http_arg
http_argctrl_t	xhttp.h	/^}http_argctrl_t;$/;"	t	typeref:struct:_http_argctrl
http_array_new_amf	xhttp.c	/^http_array_new_amf(http_info_t* info)$/;"	f
http_array_new_arg	xhttp.c	/^http_array_new_arg(http_info_t* info)$/;"	f
http_array_new_av	xhttp.c	/^http_av_t* http_array_new_av(http_info_t* info)$/;"	f
http_array_new_cookie	xhttp.c	/^http_array_new_cookie(http_info_t* info)$/;"	f
http_array_new_file	xhttp.c	/^http_file_t* http_array_new_file(http_info_t* info)$/;"	f
http_av_t	xhttp.h	/^} http_av_t;$/;"	t	typeref:struct:_http_av
http_avctrl_t	xhttp.h	/^}http_avctrl_t;$/;"	t	typeref:struct:_http_avctrl
http_bmpat_t	xhttp.h	/^} http_bmpat_t;$/;"	t	typeref:struct:_http_bmpat
http_calltbl_t	xhttp.c	/^} http_calltbl_t;$/;"	t	typeref:struct:_http_calltbl	file:
http_change_stream	http_modify.c	/^int http_change_stream(char* new_data,int max_new_data_len,char *data, int data_len,http_t* info,http_header_modify_t* modify)$/;"	f
http_char2num	http_basic.c	/^int http_char2num(char c)$/;"	f
http_check_after_parse	http.c	/^int http_check_after_parse(char* data,int data_len,http_t* info,int dir)$/;"	f
http_check_after_parse	xhttp.c	/^int http_check_after_parse(char* data,int data_len,http_info_t* info,int dir)$/;"	f
http_check_before_parse	http.c	/^int http_check_before_parse(char* data,int data_len,http_t* info,int dir)$/;"	f
http_check_hstate	xhttp.c	/^int http_check_hstate(char c,int status,int offset,http_info_t* info)$/;"	f
http_check_private_ip_addr	xhttp.c	/^int http_check_private_ip_addr(unsigned int net_order_ip)$/;"	f
http_ckctrl_t	xhttp.h	/^} http_ckctrl_t;$/;"	t	typeref:struct:_http_ckctrl
http_clean	http.c	/^int http_clean(http_t* info)$/;"	f
http_clean	xhttp.c	/^int http_clean(http_info_t* info)$/;"	f
http_clean_str_cmp	http_basic.c	/^http_clean_str_cmp(char* dst,int dst_len,char* src,int src_len)$/;"	f
http_clear_new_args	xhttp.c	/^http_clear_new_args(http_info_t *info)$/;"	f
http_clear_new_file_flag	xhttp.c	/^http_clear_new_file_flag(http_info_t *info)$/;"	f
http_combuf_t	xhttp.h	/^} http_combuf_t;$/;"	t	typeref:struct:_http_combuf
http_config	xhttp.c	/^http_config_t http_config;$/;"	v
http_config_t	xhttp.h	/^} http_config_t;$/;"	t	typeref:struct:_http_config
http_content_type_t	http_header.c	/^} http_content_type_t;$/;"	t	typeref:struct:_http_content_type	file:
http_content_type_table	http_header.c	/^http_content_type_t http_content_type_table[] = {$/;"	v
http_cookie_t	xhttp.h	/^} http_cookie_t;$/;"	t	typeref:struct:_http_cookie
http_copy_data_buf	xhttp.c	/^http_copy_data_buf(http_combuf_t* buf,char** data,int *data_len,int max_len,char* value,int value_len,http_info_t* info)$/;"	f
http_core_set_header	xhttp.c	/^int http_core_set_header(http_info_t* info,char* name,int name_len,char* value,int value_len)$/;"	f
http_ctx	connection.h	/^	http_t		http_ctx;$/;"	m	struct:connection
http_ctype_t	xhttp.c	/^} http_ctype_t;$/;"	t	typeref:struct:_http_ctype	file:
http_ctype_table	xhttp.c	/^http_ctype_t http_ctype_table[] = {$/;"	v
http_decode_arg	http_arg.c	/^int http_decode_arg(http_arg_t* item,http_t* info)$/;"	f
http_decode_arg	xhttp.c	/^http_decode_arg(http_arg_t* item,http_info_t* info)$/;"	f
http_decode_path	http_decode.c	/^int http_decode_path(u_int8_t *s, int32_t s_len)$/;"	f
http_decode_string	http_decode.c	/^int http_decode_string(unsigned char *out_string, \\$/;"	f
http_dump_arg	http_dump.c	/^int http_dump_arg(http_t* info)$/;"	f
http_dump_file	http_dump.c	/^int http_dump_file(http_t* info)$/;"	f
http_dump_int	http_dump.c	/^int http_dump_int(http_t* info)$/;"	f
http_dump_logic	http_dump.c	/^int http_dump_logic(http_t* info)$/;"	f
http_dump_str	http_dump.c	/^int http_dump_str(http_t* info)$/;"	f
http_end_len	xhttp.c	/^static int http_end_len=8;\/\/strlen("http\/1.1");$/;"	v	file:
http_fctrl_t	xhttp.h	/^}http_fctrl_t;$/;"	t	typeref:struct:_http_fctrl
http_file_ctrl_t	http.h	/^}http_file_ctrl_t;$/;"	t	typeref:struct:_http_fctrl
http_file_t	http.h	/^}http_file_t;$/;"	t	typeref:struct:_http_file
http_file_t	xhttp.h	/^}http_file_t;$/;"	t	typeref:struct:_http_file
http_func_t	http_table.h	/^typedef int (*http_func_t)(char *data, int dlen,int off, http_t* info);$/;"	t
http_func_t	xhttp.c	/^typedef int (*http_func_t)(char *data, int dlen,int off, http_info_t* i);$/;"	t	file:
http_get_amf	xhttp.c	/^http_get_amf(http_info_t* info,int num)$/;"	f
http_get_amf_cnt	xhttp.c	/^http_get_amf_cnt(http_info_t* info)$/;"	f
http_get_amf_t	xhttp.c	/^http_get_amf_t(http_info_t* info)$/;"	f
http_get_arg	http_arg.c	/^http_arg_t*  http_get_arg(http_t* info,int num)$/;"	f
http_get_arg	xhttp.c	/^http_get_arg(http_info_t* info,int num)$/;"	f
http_get_arg_cnt	http_arg.c	/^int http_get_arg_cnt(http_t* info)$/;"	f
http_get_arg_cnt	xhttp.c	/^http_get_arg_cnt(http_info_t* info)$/;"	f
http_get_arg_t	http_basic.c	/^http_arg_ctrl_t * http_get_arg_t(http_t* info)$/;"	f
http_get_arg_t	xhttp.c	/^http_get_arg_t(http_info_t* info)$/;"	f
http_get_av	xhttp.c	/^http_get_av(http_info_t* info,int num)$/;"	f
http_get_av_cnt	xhttp.c	/^http_get_av_cnt(http_info_t* info)$/;"	f
http_get_av_t	xhttp.c	/^http_get_av_t(http_info_t* info)$/;"	f
http_get_buf	xhttp.c	/^http_get_buf(struct _http_info *info,int index)$/;"	f
http_get_buflen	xhttp.c	/^http_get_buflen(struct _http_info *info,int index)$/;"	f
http_get_config_t	xhttp.c	/^http_get_config_t(http_info_t* info)$/;"	f
http_get_content_type	http_header.c	/^int http_get_content_type(char *begin, char *end, http_t *info)$/;"	f
http_get_cookie	xhttp.c	/^http_get_cookie(http_info_t* info,int num)$/;"	f
http_get_cookie_cnt	xhttp.c	/^http_get_cookie_cnt(http_info_t* info)$/;"	f
http_get_cookie_t	xhttp.c	/^http_get_cookie_t(http_info_t* info)$/;"	f
http_get_ctype	xhttp.c	/^http_get_ctype(char *begin, char *end, http_info_t *info)$/;"	f
http_get_cur_hline	xhttp.c	/^http_hline_t* http_get_cur_hline(http_info_t* info)$/;"	f
http_get_data	http.c	/^char* http_get_data(void* s,int* len)$/;"	f
http_get_empty_arg	http_arg.c	/^http_arg_t* http_get_empty_arg(http_t* info)$/;"	f
http_get_empty_file	http_form.c	/^http_file_t* http_get_empty_file(http_t* info)$/;"	f
http_get_error	xhttp.c	/^int http_get_error(http_info_t* info)$/;"	f
http_get_file	http_form.c	/^http_file_t * http_get_file(http_t* info,int num)$/;"	f
http_get_file	xhttp.c	/^http_get_file(http_info_t* info,int num)$/;"	f
http_get_file_cnt	http_form.c	/^http_get_file_cnt(http_t* info)$/;"	f
http_get_file_cnt	xhttp.c	/^http_get_file_cnt(http_info_t* info)$/;"	f
http_get_file_t	http_basic.c	/^http_file_ctrl_t * http_get_file_t(http_t* info)$/;"	f
http_get_file_t	xhttp.c	/^http_get_file_t(http_info_t* info)$/;"	f
http_get_flag	xhttp.c	/^int http_get_flag(char* data,int len,int* flag_url,int* flag_arg,int* url_len,http_info_t* info)$/;"	f
http_get_form_lable_value	http_form.c	/^http_get_form_lable_value(char* data,int len,char* label,int label_len,$/;"	f
http_get_form_lable_value	xhttp.c	/^http_get_form_lable_value(char* data,int len,char* label,int label_len,$/;"	f
http_get_form_lable_value2	http_form.c	/^http_get_form_lable_value2(char* data,int len,char* label,int label_len,$/;"	f
http_get_form_lable_value2	xhttp.c	/^http_get_form_lable_value2(char* data,int len,char* label,int label_len,$/;"	f
http_get_header_line	xhttp.c	/^http_get_header_line(http_info_t* info,int num)$/;"	f
http_get_header_line_cnt	xhttp.c	/^http_get_header_line_cnt(http_info_t* info)$/;"	f
http_get_header_t	xhttp.c	/^http_get_header_t(http_info_t* info)$/;"	f
http_get_hline	xhttp.c	/^http_get_hline(http_info_t* info,int num)$/;"	f
http_get_hline_cnt	xhttp.c	/^http_get_hline_cnt(http_info_t* info)$/;"	f
http_get_int	http_api.c	/^http_get_int(http_t *info, int index)$/;"	f
http_get_int_t	http_basic.c	/^http_int_t * http_get_int_t(http_t* info)$/;"	f
http_get_int_t	xhttp.c	/^http_get_int_t(http_info_t* info)$/;"	f
http_get_left_ip	xhttp.c	/^int http_get_left_ip(char* data,int len,http_info_t* info,char* buf,int buf_len)$/;"	f
http_get_limit_error	xhttp.c	/^int http_get_limit_error(http_info_t* info)$/;"	f
http_get_local_t	http_basic.c	/^local_t * http_get_local_t(http_t* info)$/;"	f
http_get_local_t	xhttp.c	/^http_get_local_t(http_info_t* info)$/;"	f
http_get_logic	http_api.c	/^int http_get_logic(http_t *info, int index)$/;"	f
http_get_logic_t	http_basic.c	/^logic_t * http_get_logic_t(http_t* info)$/;"	f
http_get_logic_t	xhttp.c	/^http_get_logic_t(http_info_t* info)$/;"	f
http_get_new_arg	xhttp.c	/^http_get_new_arg(http_info_t* info,int num)$/;"	f
http_get_new_arg_cnt	xhttp.c	/^http_get_new_arg_cnt(http_info_t *info)$/;"	f
http_get_new_file	xhttp.c	/^http_get_new_file(http_info_t* info,int num)$/;"	f
http_get_new_file_cnt	xhttp.c	/^http_get_new_file_cnt(http_info_t *info)$/;"	f
http_get_normal_error	xhttp.c	/^int http_get_normal_error(http_info_t* info)$/;"	f
http_get_protocol_t	xhttp.c	/^http_get_protocol_t(http_info_t* info)$/;"	f
http_get_str	http_api.c	/^char * http_get_str(http_t *info, int index)$/;"	f
http_get_str_len	http_api.c	/^int http_get_str_len(http_t *info, int index)$/;"	f
http_get_str_t	http_basic.c	/^http_str_t * http_get_str_t(http_t* info)$/;"	f
http_global_clean	xhttp.c	/^int http_global_clean()$/;"	f
http_global_init	http.c	/^int http_global_init()$/;"	f
http_global_init	xhttp.c	/^int http_global_init()$/;"	f
http_hctrl_t	xhttp.h	/^}http_hctrl_t;$/;"	t	typeref:struct:_http_hctrl
http_header	http_header.c	/^http_table_t          http_header[27][27][27][5];$/;"	v
http_header	http_table.c	/^http_table_t          http_header[27][27][27][5];$/;"	v
http_header	xhttp.c	/^http_calltbl_t		http_header[27][27][27][MAX_HEAD_TABLE_MIX];$/;"	v
http_header_line_t	xhttp.h	/^}http_header_line_t;$/;"	t	typeref:struct:_http_header_line
http_header_modify_	http_modify.h	/^typedef struct http_header_modify_{$/;"	s
http_header_modify_t	http_modify.h	/^} http_header_modify_t;$/;"	t	typeref:struct:http_header_modify_
http_header_state	http_table.c	/^http_header_state_t           http_header_state[HTTP_HEADER_STATE_NUM][3];$/;"	v
http_header_state_t	http_table.h	/^} http_header_state_t;$/;"	t	typeref:struct:_http_hstate
http_hline_t	xhttp.h	/^} http_hline_t;$/;"	t	typeref:struct:_http_hline
http_hstate	xhttp.c	/^http_hstate_t		http_hstate[HTTP_HSTATE_NUM][3];$/;"	v
http_hstate_t	xhttp.c	/^} http_hstate_t;$/;"	t	typeref:struct:_http_hstate	file:
http_ignore_param	xhttp.c	/^http_ignore_param_t	http_ignore_param;$/;"	v
http_ignore_param_t	xhttp.h	/^} http_ignore_param_t;$/;"	t	typeref:struct:_http_ignore_param
http_info_t	xhttp.h	/^} http_info_t;$/;"	t	typeref:struct:_http_info
http_init	http.c	/^int http_init(http_t* info,void* ssn)$/;"	f
http_init	xhttp.c	/^int http_init(http_info_t* info,void* sess)$/;"	f
http_init_array	xhttp.c	/^int http_init_array(http_info_t* info)$/;"	f
http_init_array_after_request	xhttp.c	/^int http_init_array_after_request(http_info_t* info)$/;"	f
http_init_buf	xhttp.c	/^int http_init_buf( http_info_t* info)$/;"	f
http_init_common_buf	xhttp.c	/^int http_init_common_buf(http_combuf_t* buf,int len,http_info_t* info)$/;"	f
http_init_header_state	http_table.c	/^int http_init_header_state(void)$/;"	f
http_init_header_table	http_header.c	/^int http_init_header_table()$/;"	f
http_init_hstate	xhttp.c	/^http_init_hstate(void) $/;"	f
http_init_ignore_param	xhttp.c	/^http_init_ignore_param(void)$/;"	f
http_init_int	xhttp.c	/^int http_init_int(http_info_t* info)$/;"	f
http_init_int_after_request	xhttp.c	/^int http_init_int_after_request(http_info_t* info)$/;"	f
http_init_local	xhttp.c	/^int http_init_local(http_info_t* info)$/;"	f
http_init_local_after_request	xhttp.c	/^int http_init_local_after_request(http_info_t* info)$/;"	f
http_init_logic	xhttp.c	/^int http_init_logic(http_info_t* info)$/;"	f
http_init_logic_after_request	xhttp.c	/^int http_init_logic_after_request(http_info_t* info)$/;"	f
http_init_method_table	http_table.c	/^http_init_method_table(void)$/;"	f
http_init_mstate	http_table.c	/^int http_init_mstate(void)$/;"	f
http_init_mstate	xhttp.c	/^http_init_mstate(void) $/;"	f
http_init_str	xhttp.c	/^int http_init_str(http_info_t* info)$/;"	f
http_init_str_after_request	xhttp.c	/^int http_init_str_after_request(http_info_t* info)$/;"	f
http_int	http.h	/^	http_int_t http_int;$/;"	m	struct:_http_
http_int_t	http.h	/^} http_int_t;$/;"	t	typeref:struct:_http_int
http_int_t	xhttp.h	/^} http_int_t;$/;"	t	typeref:struct:_http_int
http_is_critical_error	xhttp.c	/^int http_is_critical_error(http_info_t* info)$/;"	f
http_jump_no_slash	xhttp.c	/^char * http_jump_no_slash(char* str,int len,http_info_t* info)$/;"	f
http_jump_slash	xhttp.c	/^char * http_jump_slash(char* str,int len,http_info_t* info)$/;"	f
http_local_t	xhttp.h	/^} http_local_t;$/;"	t	typeref:struct:_http_local
http_logic_t	xhttp.h	/^} http_logic_t;$/;"	t	typeref:struct:_http_logic
http_malloc	http_basic.c	/^void* http_malloc(http_t* info,int len)$/;"	f
http_malloc	xhttp.c	/^http_malloc( http_info_t* info,int size)$/;"	f
http_match_header_table	http_header.c	/^int http_match_header_table(char *name,int name_len, char *value, int value_len, http_t *info)$/;"	f
http_match_hltb	xhttp.c	/^int http_match_hltb(char *begin, char *data, int len, int offset, http_info_t *info)$/;"	f
http_method_null	http_table.c	/^int http_method_null(char* data,int len,int offset,http_t* info)$/;"	f
http_methods	http_table.c	/^http_table_t          http_methods[27][27][MAX_METHOD_TABLE_MIX];$/;"	v
http_methods	xhttp.c	/^http_calltbl_t		http_methods[27][27][MAX_METHOD_TABLE_MIX];$/;"	v
http_modify_stream	http_modify.h	/^typedef struct http_modify_stream{$/;"	s
http_modify_stream_t	http_modify.h	/^} http_modify_stream_t;$/;"	t	typeref:struct:http_modify_stream
http_move_args	xhttp.c	/^int http_move_args(http_info_t* info)$/;"	f
http_move_header	xhttp.c	/^int http_move_header(http_info_t* info)$/;"	f
http_mstate	xhttp.c	/^http_state_t		http_mstate[HTTP_STATE_NUM];$/;"	v
http_myparse_method	http_header.c	/^int http_myparse_method(char* data,int len,http_t* info)$/;"	f
http_new_hline	xhttp.c	/^http_new_hline(http_info_t* info)$/;"	f
http_para_t	xhttp.h	/^} http_para_t;$/;"	t	typeref:struct:_http_para
http_parse	http.c	/^int http_parse(char* data,int data_len,http_t* info,int dir)$/;"	f
http_parse	xhttp.c	/^int http_parse(char* data,int data_len,http_info_t* info,int dir)$/;"	f
http_parse_amf	xhttp.c	/^http_parse_amf(char* data, int data_len, http_info_t* info)$/;"	f
http_parse_av	xhttp.c	/^http_parse_av(char* data, int data_len, http_info_t* info)$/;"	f
http_parse_body	http_body.c	/^int http_parse_body(char* data,int len,http_t* info)$/;"	f
http_parse_body	xhttp.c	/^int http_parse_body(char* data,int data_len,int offset,http_info_t* info)$/;"	f
http_parse_body_args	http_body.c	/^int http_parse_body_args(char* data,int data_len,http_t* info)$/;"	f
http_parse_body_args	xhttp.c	/^int http_parse_body_args(char* data,int data_len,http_info_t* info)$/;"	f
http_parse_content_type	http_header.c	/^int http_parse_content_type(char *begin, char *end, http_t *info)$/;"	f
http_parse_content_type	xhttp.c	/^int http_parse_content_type(char *begin, char *end, http_info_t *info)$/;"	f
http_parse_cookie	xhttp.c	/^int http_parse_cookie(char* data,int len,http_info_t* info)$/;"	f
http_parse_form	http_form.c	/^int http_parse_form(char* data,int len,http_t* info)$/;"	f
http_parse_form	xhttp.c	/^int http_parse_form(char* data,int len,http_info_t* info)$/;"	f
http_parse_func_t	http_header.c	/^typedef int (*http_parse_func_t)(char *begin, char *end, http_t *info);$/;"	t	file:
http_parse_func_t	xhttp.c	/^typedef int (*http_parse_func_t)(char *begin, char *end, http_info_t *info);$/;"	t	file:
http_parse_head	http.c	/^int http_parse_head(char* data,int data_len,int offset,http_t* info,int dir)$/;"	f
http_parse_head	xhttp.c	/^int http_parse_head(char* data,int data_len,int offset,http_info_t* info)$/;"	f
http_parse_line	http_header.c	/^int http_parse_line(http_t* info,char* begin,char* split,char* end,int dir,int num)$/;"	f
http_parse_node_t	http_header.c	/^} http_parse_node_t;$/;"	t	typeref:struct:_http_parse_node	file:
http_parse_node_t	xhttp.c	/^} http_parse_node_t;$/;"	t	typeref:struct:_http_parse_node	file:
http_parse_one_cookie	xhttp.c	/^int http_parse_one_cookie(char* data,int len,http_info_t* info)$/;"	f
http_parse_set_cookie	xhttp.c	/^int http_parse_set_cookie(char* data,int len,http_info_t* info)$/;"	f
http_protocol_t	xhttp.h	/^} http_protocol_t;$/;"	t	typeref:struct:_header_protocol
http_read_line	http_body.c	/^int http_read_line(char* data,int data_len,http_t* info)$/;"	f
http_record_line	xhttp.c	/^int http_record_line(http_info_t* info, int begin, int len, int split)$/;"	f
http_remove_auth	http_modify.c	/^int http_remove_auth(http_header_modify_t* pak,http_modify_stream_t* stream,http_t* info)$/;"	f
http_remove_chunk	http_modify.c	/^int http_remove_chunk(http_header_modify_t* pak,http_modify_stream_t* stream,http_t* info)$/;"	f
http_remove_cookie	http_modify.c	/^int http_remove_cookie(http_header_modify_t* pak,http_modify_stream_t* stream,http_t* info)$/;"	f
http_remove_gzip	http_modify.c	/^int http_remove_gzip(http_header_modify_t* pak,http_modify_stream_t* stream,http_t* info)$/;"	f
http_replace_auth	http_modify.c	/^int http_replace_auth(http_header_modify_t* pak,http_modify_stream_t* stream,http_t* info)$/;"	f
http_replace_content_len	http_modify.c	/^int http_replace_content_len(http_header_modify_t* pak,http_modify_stream_t* stream,http_t* info)$/;"	f
http_replace_host	http_modify.c	/^int http_replace_host(http_header_modify_t* pak,http_modify_stream_t* stream,http_t* info)$/;"	f
http_replace_location	http_modify.c	/^int http_replace_location(http_header_modify_t* pak,http_modify_stream_t* stream,http_t* info)$/;"	f
http_replace_refer	http_modify.c	/^int http_replace_refer(http_header_modify_t* pak,http_modify_stream_t* stream,http_t* info)$/;"	f
http_reset_cookie	xhttp.c	/^int http_reset_cookie(http_info_t* info)$/;"	f
http_reset_header	xhttp.c	/^int http_reset_header(http_info_t* info)$/;"	f
http_reset_response	http.c	/^int http_reset_response(http_t* info)$/;"	f
http_reset_response	xhttp.c	/^int http_reset_response(http_info_t* info)$/;"	f
http_set_amf	xhttp.c	/^http_set_amf(char* name,int name_len,char* value,int value_len, $/;"	f
http_set_arg	xhttp.c	/^int http_set_arg(char* name,int name_len,char* value,int value_len,http_info_t* info,http_arg_t* item)$/;"	f
http_set_av	xhttp.c	/^int http_set_av(char* name,int name_len,char* value,int value_len,http_info_t* info,http_av_t* item)$/;"	f
http_set_clen	xhttp.c	/^int http_set_clen(http_info_t* info,int len)$/;"	f
http_set_cookie	xhttp.c	/^int http_set_cookie(http_cookie_t* item ,http_info_t* info)$/;"	f
http_set_ctype	xhttp.c	/^http_set_ctype(http_info_t* info,int type)$/;"	f
http_set_error	xhttp.c	/^int http_set_error(http_info_t* info,int error)$/;"	f
http_set_file	http_form.c	/^int http_set_file(char* name,int name_len,char* value,int value_len,http_t* info,http_file_t* item)$/;"	f
http_set_file	xhttp.c	/^int http_set_file(char* name,int name_len,char* value,int value_len,http_info_t* info,http_file_t* item)$/;"	f
http_set_header_data	xhttp.c	/^int http_set_header_data(http_info_t* info,http_hline_t* item)$/;"	f
http_set_header_table	http_header.c	/^http_set_header_table(char* name, http_func_t cb, int num)$/;"	f
http_set_len_flag	xhttp.c	/^int http_set_len_flag(http_info_t* info,int flag)$/;"	f
http_set_max_header_line	xhttp.c	/^int http_set_max_header_line(http_info_t* info,int len)$/;"	f
http_set_protocol_str	xhttp.c	/^http_set_protocol_str(http_info_t* info,int index,char* data,int len)$/;"	f
http_set_state	http_basic.c	/^int http_set_state(http_t* info,int state)$/;"	f
http_set_state	xhttp.c	/^http_set_state(http_info_t *info,int status)$/;"	f
http_set_status	xhttp.c	/^int http_set_status(http_info_t* info,int status)$/;"	f
http_set_str	http_basic.c	/^int http_set_str(http_t* info,x_str_t* str,char* data,int len)$/;"	f
http_set_str_no_null	http_basic.c	/^int http_set_str_no_null(http_t* info,x_str_t* str,char* data,int len,int max_len)$/;"	f
http_split_buf	xhttp.c	/^int http_split_buf(char **name, int* name_len, char** value, int* value_len, $/;"	f
http_state	http_table.c	/^http_state_t            http_state[HTTP_STATE_NUM];$/;"	v
http_state_t	http_table.h	/^} http_state_t;$/;"	t	typeref:struct:_http_state
http_state_t	xhttp.c	/^} http_state_t;$/;"	t	typeref:struct:_http_state	file:
http_str_t	http.h	/^} http_str_t;$/;"	t	typeref:struct:_http_str
http_str_t	xhttp.h	/^} http_str_t;$/;"	t	typeref:struct:_http_str
http_t	http.h	/^} http_t;$/;"	t	typeref:struct:_http_
http_table_init	xhttp.c	/^int http_table_init()$/;"	f
http_table_t	http_table.h	/^} http_table_t;$/;"	t	typeref:struct:_http_table__
http_update_host	http_modify.c	/^int http_update_host(http_header_modify_t* pak,http_modify_stream_t* stream,http_t* info)$/;"	f
http_update_location	http_modify.c	/^int http_update_location(http_header_modify_t* pak,http_modify_stream_t* stream,http_t* info)$/;"	f
http_update_refer	http_modify.c	/^int http_update_refer(http_header_modify_t* pak,http_modify_stream_t* stream,http_t* info)$/;"	f
http_update_url	http_modify.c	/^int http_update_url(http_header_modify_t* pak,http_modify_stream_t* stream,http_t* info)$/;"	f
http_wait_label_str	http_form.c	/^http_wait_label_str(char* buf,int buf_len,char* data,int data_len, $/;"	f
http_wait_label_str	xhttp.c	/^http_wait_label_str(char* buf,int buf_len,char* data,int data_len, $/;"	f
http_wait_line_str	http_form.c	/^int http_wait_line_str(char* buf,int buf_len,char* data,int data_len, $/;"	f
http_wait_line_str	xhttp.c	/^int http_wait_line_str(char* buf,int buf_len,char* data,int data_len, $/;"	f
httpaddr	proxy.h	/^	ip_port_t	httpaddr;	\/* HTTP server address *\/$/;"	m	struct:context
httpfd	thread_fun.h	/^	int		httpfd;		\/* HTTP listen fd *\/$/;"	m	struct:_accept
httpsaddr	proxy.h	/^	ip_port_t	httpsaddr;	\/* HTTPS server address *\/$/;"	m	struct:context
httpsfd	thread_fun.h	/^	int		httpsfd;	\/* HTTPS listen fd *\/$/;"	m	struct:_accept
i_tar	load_rule.h	/^	int  i_tar;$/;"	m	struct:rule_node_t
id	acsmx.h	/^    void   * id;$/;"	m	struct:_acsm_pattern
id	connection.h	/^	int		id;		\/* connection id *\/$/;"	m	struct:connection
id	connection.h	/^	int		id;		\/* connection id for inline *\/$/;"	m	struct:connection_tup
id	http_header.c	/^        int     id;$/;"	m	struct:_http_content_type	file:
id	load_key.c	/^        int  id;$/;"	m	struct:_pat_t	file:
id	load_key.h	/^        unsigned int id;$/;"	m	struct:_key_node_t
id	load_rule.c	/^	char id[MAX_TXT_LEN2];$/;"	m	struct:sec_rule_t	file:
id	log_db.h	/^	char id[MAX_TXT_LEN2];$/;"	m	struct:_sub_log_
id	log_db.h	/^        char    id[MAX_TXT_LEN2]; \/\/规则id$/;"	m	struct:_alog_
id	xhttp.c	/^	int	id;$/;"	m	struct:_http_ctype	file:
iid	acsmx.h	/^    int      iid;$/;"	m	struct:_acsm_pattern
illegal_filesize_logged	http.h	/^        int illegal_filesize_logged; \/\/logged already or not?$/;"	m	struct:_http_file
illegal_filesize_logged	xhttp.h	/^	int illegal_filesize_logged; \/\/logged already or not?$/;"	m	struct:_http_file
incsize	mempool.h	/^	u_int16_t	incsize;	\/* inceament size *\/$/;"	m	struct:mempool
index	connection.h	/^	u_int16_t	index;		\/* the index for offline *\/$/;"	m	struct:connection_tup
index	connection.h	/^	u_int8_t	index;		\/* index of work thread *\/$/;"	m	struct:connection
index	pat.c	/^	int index[20];$/;"	m	struct:_key_data_t	file:
index	thread_fun.h	/^	int		index;		\/* the next work index *\/$/;"	m	struct:_accept
index	thread_fun.h	/^	int		index;	\/* only for work thread *\/	$/;"	m	struct:thread
init_db_object	sqlite_db.c	/^int init_db_object( waf_signature_search_object *db_obj,sqlite3 *db )$/;"	f
init_fast_match	load_key.c	/^int init_fast_match()$/;"	f
init_flag	http.h	/^	int init_flag;$/;"	m	struct:_http_
init_flag	xhttp.h	/^	int		init_flag;$/;"	m	struct:_http_ignore_param
init_flag	xhttp.h	/^	int		init_flag;$/;"	m	struct:_http_info
init_xlatcase	acsmx.c	/^init_xlatcase () $/;"	f	file:
inq	connection.h	/^	pktq_t		inq;		\/* the input queue *\/$/;"	m	struct:connection_queue
inq	thread_fun.h	/^	connection_t	**inq;		\/* input queue *\/$/;"	m	struct:_recv
inq	thread_fun.h	/^	pktq_t		inq;$/;"	m	struct:_parse
inq	thread_fun.h	/^	pktq_t		inq;$/;"	m	struct:_send
inq	thread_fun.h	/^	workfd_t	*inq;		\/* input queue for accept *\/$/;"	m	struct:_work
inq2	thread_fun.h	/^	connection_t	**inq2;		\/* secondary input queue *\/$/;"	m	struct:_recv
inq2	thread_fun.h	/^	workfd_t	*inq2;		\/* secondary input queue *\/$/;"	m	struct:_work
ip	cfg_db.h	/^	int ip;		\/\/vps local ip ;$/;"	m	struct:_conf_vps_
ip4_cidr_to_mask	ip_addr.c	/^ip4_cidr_to_mask(int cidr)$/;"	f
ip4_from_str	ip_addr.c	/^ip4_from_str(const char *str)$/;"	f
ip4_in_range	ip_addr.c	/^ip4_in_range(u_int32_t ip, u_int32_t begin, u_int32_t end)$/;"	f
ip4_mask_to_cidr	ip_addr.c	/^ip4_mask_to_cidr(u_int32_t mask)$/;"	f
ip4_match_range	ip_addr.c	/^ip4_match_range(u_int32_t ip, const char* ip_or_range)$/;"	f
ip4_to_str	ip_addr.c	/^ip4_to_str(u_int32_t ip, char *buf, size_t len)$/;"	f
ip6_print	ip_addr.c	/^ip6_print(const struct in6_addr *addr)$/;"	f
ip_addr	ip_addr.h	/^typedef struct ip_addr {$/;"	s
ip_addr_apply_mask	ip_addr.c	/^ip_addr_apply_mask(ip_addr_t *ip, int cidr)$/;"	f
ip_addr_compare	ip_addr.c	/^ip_addr_compare(const ip_addr_t *ip1, const ip_addr_t *ip2)$/;"	f
ip_addr_from_dns	ip_addr.c	/^ip_addr_from_dns(ip_addr_t *ip, const char *name)$/;"	f
ip_addr_from_socket	ip_addr.c	/^ip_addr_from_socket(ip_addr_t *ip, int fd, int get_remote)$/;"	f
ip_addr_from_str	ip_addr.c	/^ip_addr_from_str(ip_addr_t *ip, const char *str)$/;"	f
ip_addr_str_is_valid	ip_addr.c	/^ip_addr_str_is_valid(const char *str)$/;"	f
ip_addr_t	ip_addr.h	/^} ip_addr_t;$/;"	t	typeref:struct:ip_addr
ip_addr_to_str	ip_addr.c	/^ip_addr_to_str(const ip_addr_t *ip, char *buf, size_t len)$/;"	f
ip_addr_v4_to_v6	ip_addr.c	/^ip_addr_v4_to_v6(const ip_addr_t *v4, ip_addr_t *v6)$/;"	f
ip_addr_v6_to_v4	ip_addr.c	/^ip_addr_v6_to_v4(const ip_addr_t *v6, ip_addr_t *v4)$/;"	f
ip_location	xhttp.h	/^	int 		ip_location;$/;"	m	struct:_http_config
ip_mask	ip_addr.h	/^typedef struct ip_mask {$/;"	s
ip_mask_compare	ip_addr.c	/^ip_mask_compare(const ip_mask_t *mask1, const ip_mask_t *mask2)$/;"	f
ip_mask_from_str	ip_addr.c	/^ip_mask_from_str(ip_mask_t *mask, const char *str)$/;"	f
ip_mask_is_wildcard	ip_addr.c	/^ip_mask_is_wildcard(const ip_mask_t *mask)$/;"	f
ip_mask_match	ip_addr.c	/^ip_mask_match(const ip_mask_t *mask, const ip_addr_t *ip)$/;"	f
ip_mask_t	ip_addr.h	/^} ip_mask_t;$/;"	t	typeref:struct:ip_mask
ip_mask_to_str	ip_addr.c	/^ip_mask_to_str(const ip_mask_t *mask, char *buf, size_t len)$/;"	f
ip_port	ip_addr.h	/^typedef struct ip_port {$/;"	s
ip_port_compare	ip_addr.c	/^ip_port_compare(const ip_port_t *ip1, const ip_port_t *ip2)$/;"	f
ip_port_from_str	ip_addr.c	/^ip_port_from_str(ip_port_t *ip, const char *str)$/;"	f
ip_port_t	ip_addr.h	/^} ip_port_t;$/;"	t	typeref:struct:ip_port
ip_port_to_str	ip_addr.c	/^ip_port_to_str(const ip_port_t *ip, char *buf, size_t len)$/;"	f
is_cenc	xhttp.h	/^        short		is_cenc;	\/* content encoding *\/$/;"	m	struct:_http_logic
is_chunked	http.h	/^	int 		is_chunked;$/;"	m	struct:_http_logic
is_chunked	xhttp.h	/^        short		is_chunked;	\/* trunked *\/$/;"	m	struct:_http_logic
is_cliblock	connection.h	/^	u_int32_t	is_cliblock:1;	\/* client side is blocked*\/$/;"	m	struct:connection
is_cliclose	connection.h	/^	u_int32_t	is_cliclose:1;	\/* client closed *\/$/;"	m	struct:connection
is_clierror	connection.h	/^	u_int32_t	is_clierror:1;	\/* client error *\/$/;"	m	struct:connection
is_clisslwait	connection.h	/^	u_int32_t	is_clisslwait:1;\/* client need wait SSL *\/$/;"	m	struct:connection
is_closed	http.h	/^	int 		is_closed;$/;"	m	struct:_http_logic
is_closed	xhttp.h	/^        short		is_closed;	\/* server closed *\/$/;"	m	struct:_http_logic
is_dropargs	xhttp.h	/^        short		is_dropargs;	\/* dropped args *\/$/;"	m	struct:_http_logic
is_gzip	xhttp.h	/^        short		is_gzip;	\/* gzip method *\/$/;"	m	struct:_http_logic
is_key_word_optimize	libmulpat.h	/^	char is_key_word_optimize;$/;"	m	struct:_match_mulpat_target_t
is_only_gzip	xhttp.h	/^        short		is_only_gzip;	\/* only gzipped *\/$/;"	m	struct:_http_logic
is_request	packet.h	/^	u_int16_t	is_request:1;	\/* it's the request message *\/$/;"	m	struct:packet
is_rpc	xhttp.h	/^        short		is_rpc;		\/* rpc *\/$/;"	m	struct:_http_logic
is_ssl	thread_fun.h	/^	u_int32_t	is_ssl:1;	\/* is ssl *\/$/;"	m	struct:_workfd
is_svrblock	connection.h	/^	u_int32_t	is_svrblock:1;	\/* server is blocked *\/$/;"	m	struct:connection
is_svrclose	connection.h	/^	u_int32_t	is_svrclose:1;	\/* server closed *\/$/;"	m	struct:connection
is_svrerror	connection.h	/^	u_int32_t	is_svrerror:1;	\/* server error *\/$/;"	m	struct:connection
is_svrsslwait	connection.h	/^	u_int32_t	is_svrsslwait:1;\/* server wait SSL *\/$/;"	m	struct:connection
is_svrwait	connection.h	/^	u_int32_t	is_svrwait:1;	\/* wait TCP connection *\/$/;"	m	struct:connection
is_used	mempool.c	/^	u_int32_t	is_used:1;	\/* this node is used *\/$/;"	m	struct:_op_node	file:
is_ver_11	xhttp.h	/^        short		is_ver_11;	\/* HTTP\/1.1 *\/$/;"	m	struct:_http_logic
is_wafrdt	xhttp.h	/^        short		is_wafrdt;	\/* waf redirect *\/$/;"	m	struct:_http_logic
is_wafsid	xhttp.h	/^        short		is_wafsid;	\/* wafsid *\/$/;"	m	struct:_http_logic
js_arg	xhttp.h	/^	http_str_t	js_arg;		\/* Javascript argument *\/$/;"	m	struct:_header_protocol
jump_buf	http.c	/^char* jump_buf="\\r\\n\\r\\n";$/;"	v
jump_buf_len	http.c	/^int jump_buf_len=4;$/;"	v
jump_tab	xhttp.h	/^	u_int32_t	jump_tab[256];$/;"	m	struct:_http_bmpat
key	http_table.h	/^        char            key[128];$/;"	m	struct:_http_table__
key	load_rule.c	/^	int key;$/;"	m	struct:sec_rule_t	file:
key	load_rule.h	/^	int  key;$/;"	m	struct:rule_node_t
key	xhttp.c	/^	char		key[128];$/;"	m	struct:_http_calltbl	file:
key_data	pat.c	/^} key_data;$/;"	t	typeref:struct:_key_data_t	file:
key_node_t	load_key.h	/^} key_node_t;$/;"	t	typeref:struct:_key_node_t
key_word_optimize	libmulpat.h	/^	int *key_word_optimize;$/;"	m	struct:_match_pattern_rst_t
key_word_optimize_len	libmulpat.h	/^	int key_word_optimize_len;$/;"	m	struct:_match_pattern_rst_t
keylen	http_table.h	/^        int             keylen;$/;"	m	struct:_http_table__
keylen	xhttp.c	/^	int		keylen;$/;"	m	struct:_http_calltbl	file:
keyword	libmulpat.h	/^	char keyword[MAX_KEY_WORD_LEN];$/;"	m	struct:_multi_pattern_node_t
keyword_id	libmulpat.h	/^	unsigned int keyword_id;$/;"	m	struct:_multi_pattern_node_t
last_len	http.h	/^        int             last_len;$/;"	m	struct:_http_local
last_len	xhttp.h	/^	int 		last_len;$/;"	m	struct:_http_local
len	http.h	/^	int len;$/;"	m	struct:local_str_
len	packet.h	/^	u_int16_t	len;		\/* bytes in packet *\/$/;"	m	struct:packet
len	packet.h	/^	u_int32_t	len;$/;"	m	struct:pktq
len	pat.c	/^	int  len;$/;"	m	struct:_key_data_t	file:
len	xhttp.h	/^	int		len;$/;"	m	struct:_http_bmpat
len	xhttp.h	/^	int		len;$/;"	m	struct:_http_hline
len	xhttp.h	/^	int		len;$/;"	m	struct:_http_str
likely	connection.c	21;"	d	file:
likely	ip_addr.c	22;"	d	file:
likely	sock_util.c	25;"	d	file:
load_cfg	load_cfg.c	/^int load_cfg()$/;"	f
load_key	load_key.c	/^int load_key()$/;"	f
load_rule	load_rule.c	/^int load_rule()$/;"	f
load_rule_check	detect_module.c	/^void load_rule_check()$/;"	f
load_waf_module	detect_module.c	/^int load_waf_module()$/;"	f
local	http.h	/^	local_t local;$/;"	m	struct:_http_
local	xhttp.h	/^	http_local_t	local;$/;"	m	struct:_http_para
local_str_	http.h	/^typedef struct local_str_{$/;"	s
local_t	http.h	/^} local_t;$/;"	t	typeref:struct:_http_local
location	http.h	/^        x_str_t      location; $/;"	m	struct:_http_str
location	http_modify.h	/^        char* location;$/;"	m	struct:http_header_modify_
location	xhttp.h	/^	http_str_t	location;	\/* Location value *\/$/;"	m	struct:_header_protocol
location_host	xhttp.h	/^	http_str_t	location_host;	\/* Location Host value *\/$/;"	m	struct:_header_protocol
location_len	http_modify.h	/^	int location_len;$/;"	m	struct:http_header_modify_
location_url	xhttp.h	/^	http_str_t	location_url;	\/* Location URL value *\/$/;"	m	struct:_header_protocol
lock	connection.h	/^	pthread_mutex_t	lock;		\/* lock for table *\/$/;"	m	struct:connection_table
lock	mempool.h	/^	pthread_mutex_t	lock;		\/* lock for thread safe *\/$/;"	m	struct:mempool
lock	proxy.h	/^	pthread_mutex_t	lock;		\/* lock for proxy stat *\/$/;"	m	struct:context
lock	proxy.h	/^	pthread_mutex_t	lock;		\/* lock for proxy stat *\/$/;"	m	struct:proxy_stat
lock	thread_fun.h	/^	pthread_mutex_t	lock;		\/* lock for input queue *\/$/;"	m	struct:_recv
lock	thread_fun.h	/^	pthread_mutex_t	lock;		\/* lock for input queue *\/$/;"	m	struct:_work
lock	thread_fun.h	/^	pthread_mutex_t	lock;$/;"	m	struct:_parse
lock	thread_fun.h	/^	pthread_mutex_t	lock;$/;"	m	struct:_send
log_attack	log_db.c	/^int log_attack(connection_t *conn, sublog_t *slog )$/;"	f
log_data	log_db.c	/^int log_data(MYSQL **db_conn, alog_t *log)$/;"	f
log_lock	proxy.h	/^	pthread_mutex_t	log_lock;		\/* lock for log *\/$/;"	m	struct:context
log_traffic	log_db.c	/^int log_traffic(tlog_t *tlog)$/;"	f
logic	http.h	/^	logic_t logic;$/;"	m	struct:_http_
logic	xhttp.h	/^	http_logic_t	logic;$/;"	m	struct:_http_para
logic_t	http.h	/^} logic_t;$/;"	t	typeref:struct:_http_logic
m_db_cfg	proxy2.c	/^MYSQL *m_db_cfg ;$/;"	v
m_db_log	proxy2.c	/^MYSQL *m_db_log ;$/;"	v
magic	connection.h	/^	u_int32_t	magic;		\/* connection magic number *\/$/;"	m	struct:connection
magic	mempool.c	/^	u_int32_t	magic;		\/* magic number == pool's*\/$/;"	m	struct:_op_node	file:
magic	mempool.c	/^	u_int32_t	magic;		\/* magic nunber == pool's*\/$/;"	m	struct:_op_cache	file:
magic	mempool.h	/^	u_int32_t	magic;		\/* magic number for verify *\/$/;"	m	struct:mempool
main	acsmx.c	/^main (int argc, char **argv) $/;"	f
main	main2.c	/^int main(int argc, char **argv)$/;"	f
main_test_url	http_decode.c	/^main_test_url(int32_t argc, int8_t *argv[])$/;"	f
main_tid	proxy.h	/^	pthread_t	main_tid;	\/* main thread id *\/$/;"	m	struct:context
match_hook	pat.c	/^int match_hook(void * id, int offset, void *data)$/;"	f
match_mulpat_target_t	libmulpat.h	/^} match_mulpat_target_t;$/;"	t	typeref:struct:_match_mulpat_target_t
match_pattern_rst_t	libmulpat.h	/^} match_pattern_rst_t;$/;"	t	typeref:struct:_match_pattern_rst_t
matched_count	libmulpat.h	/^	unsigned int matched_count;$/;"	m	struct:_match_pattern_rst_t
max	connection.h	/^	size_t		max;		\/* the max table size *\/$/;"	m	struct:connection_table
max	proxy.h	/^	u_int32_t	max;		\/* max concurrent session*\/$/;"	m	struct:context
max	thread_fun.h	/^	int		max;		\/* input queue max *\/$/;"	m	struct:_recv
max	thread_fun.h	/^	int		max;		\/* max obj in input queue *\/$/;"	m	struct:_work
max_data_len	sqlite_db.h	/^	unsigned int max_data_len;$/;"	m	struct:field_info_t
max_header_line_len	http.h	/^	int 		max_header_line_len;$/;"	m	struct:_http_int
max_hllen_0	xhttp.h	/^	u_int16_t	max_hllen_0;	\/* max header line length *\/$/;"	m	struct:_http_int
max_hllen_1	xhttp.h	/^	u_int16_t	max_hllen_1;	\/* max header line length *\/$/;"	m	struct:_http_int
max_len	http.h	/^	int max_len;$/;"	m	struct:local_str_
max_len	xhttp.h	/^        u_int32_t	max_len;$/;"	m	struct:_http_combuf
max_memory	acsmx.c	/^static int max_memory = 0;$/;"	v	file:
max_new_data_len	http_modify.h	/^        int max_new_data_len;$/;"	m	struct:http_modify_stream
max_num	http.h	/^        short           max_num;$/;"	m	struct:_http_argctrl
max_num	http.h	/^        short           max_num;$/;"	m	struct:_http_fctrl
max_num	http_poll.h	/^        short           max_num;$/;"	m	struct:_http_argctrl
max_num	xhttp.h	/^        short		max_num;$/;"	m	struct:_http_amfctrl
max_num	xhttp.h	/^        short		max_num;$/;"	m	struct:_http_argctrl
max_num	xhttp.h	/^        short		max_num;$/;"	m	struct:_http_avctrl
max_num	xhttp.h	/^        short		max_num;$/;"	m	struct:_http_ckctrl
max_num	xhttp.h	/^        short		max_num;$/;"	m	struct:_http_fctrl
max_num	xhttp.h	/^        short		max_num;$/;"	m	struct:_http_hctrl
meet_target	libmulpat.h	/^	match_mulpat_target_t meet_target[MAX_KEY_WORD_ID];$/;"	m	struct:_match_pattern_rst_t
memPOOL_INC_SIZE	mempool.h	8;"	d
mem_error	xhttp.h	/^	int	mem_error;$/;"	m	struct:_http_info
mempool	mempool.h	/^typedef struct mempool {$/;"	s
mempool_alloc	mempool.c	/^mempool_alloc(size_t memsize, int incsize, int locked)$/;"	f
mempool_free	mempool.c	/^mempool_free(mempool_t *op)$/;"	f
mempool_get	mempool.c	/^mempool_get(mempool_t *op)$/;"	f
mempool_print	mempool.c	/^mempool_print(mempool_t *op)$/;"	f
mempool_put	mempool.c	/^mempool_put(void *ptr)$/;"	f
mempool_put1	mempool.c	/^mempool_put1(mempool_t *op, void *ptr)$/;"	f
mempool_t	mempool.h	/^} mempool_t;$/;"	t	typeref:struct:mempool
memsize	mempool.h	/^	u_int16_t	memsize;	\/* the memect memory size *\/$/;"	m	struct:mempool
method	http.h	/^        short           method;         \/* method *\/$/;"	m	struct:_http_logic
method	log_db.c	/^char method[HTTP_METHOD_NUM][10]= {$/;"	v
method	log_db.h	/^        char 	method[10];$/;"	m	struct:_alog_
method	xhttp.h	/^	short		method;		\/* method *\/$/;"	m	struct:_http_logic
module_detect	detect_module.c	/^module_detect_t module_detect[MD_COUNT];$/;"	v
module_detect_entry	detect_module.c	/^int	module_detect_entry(http_t *p_http,connection_t *conn)$/;"	f
module_detect_t	detect_module.h	/^typedef struct module_detect_t{$/;"	s
module_detect_t	detect_module.h	/^}module_detect_t;$/;"	t	typeref:struct:module_detect_t
move_data_to_record	sqlite_db.c	/^int move_data_to_record( struct waf_signature_search_object *db_obj,sqlite3_stmt *stat )$/;"	f
mp	http.h	/^	apr_pool_t      *mp;$/;"	m	struct:_http_
mp	xhttp.h	/^	apr_pool_t 	*mp;		\/* apr_pool for http parse *\/$/;"	m	struct:_http_info
msg	log_db.h	/^        char 	msg[M_LEN];$/;"	m	struct:_alog_
multi_pattern_node_t	libmulpat.h	/^} multi_pattern_node_t;$/;"	t	typeref:struct:_multi_pattern_node_t
my_item	xhttp.c	/^typedef struct my_item {$/;"	s	file:
my_item_t	xhttp.c	/^} my_item_t;$/;"	t	typeref:struct:my_item	file:
mybuf	xhttp.c	/^static char mybuf[40960];$/;"	v	file:
mybuf_len	xhttp.c	/^int mybuf_len;$/;"	v
myform_label_num	http.h	/^        int             myform_label_num;$/;"	m	struct:_http_local
myform_label_num	xhttp.h	/^	int 		myform_label_num;$/;"	m	struct:_http_local
myform_label_state	http.h	/^        int             myform_label_state;$/;"	m	struct:_http_local
myform_label_state	xhttp.h	/^	int 		myform_label_state;$/;"	m	struct:_http_local
myset_data	xhttp.c	/^int myset_data(http_info_t* info,int idx,char* data,int data_len,int flag)$/;"	f
n	acsmx.h	/^    int      n;$/;"	m	struct:_acsm_pattern
naccept	proxy.h	/^	u_int64_t	naccept;	\/* total session number (http+https) *\/$/;"	m	struct:proxy_stat
nallarg	xhttp.h	/^	u_int16_t	nallarg;	\/* number of all argument *\/$/;"	m	struct:_http_int
nalloced	connection.h	/^	int		nalloced;	\/* alloced packet number *\/$/;"	m	struct:connection
nalloced	mempool.h	/^	u_int32_t	nalloced;	\/* number of alloced memects*\/$/;"	m	struct:mempool
name	http.h	/^       	x_str_t      name;$/;"	m	struct:_http_file
name	http.h	/^        x_str_t      name;$/;"	m	struct:_http_arg
name	http_header.c	/^        char    name[128];$/;"	m	struct:_http_content_type	file:
name	http_poll.h	/^        http_str_t      name;$/;"	m	struct:_http_arg
name	xhttp.c	/^	char	name[HTTP_TYPE_NAMELEN];$/;"	m	struct:_http_ctype	file:
name	xhttp.c	/^        char    *name;$/;"	m	struct:my_item	file:
name	xhttp.h	/^	char		*name;$/;"	m	struct:_http_bmpat
name	xhttp.h	/^	http_str_t	name;$/;"	m	struct:_http_amf
name	xhttp.h	/^	http_str_t	name;$/;"	m	struct:_http_arg
name	xhttp.h	/^	http_str_t	name;$/;"	m	struct:_http_av
name	xhttp.h	/^	http_str_t	name;$/;"	m	struct:_http_cookie
name	xhttp.h	/^	http_str_t	name;$/;"	m	struct:_http_file
name	xhttp.h	/^	http_str_t	name;$/;"	m	struct:_http_header_line
name	xhttp.h	/^	http_str_t	name;$/;"	m	struct:_http_hline
name_flag	http_poll.h	/^        int             name_flag;$/;"	m	struct:_http_arg
name_flag	xhttp.h	/^	int		name_flag;$/;"	m	struct:_http_arg
name_len	http_header.c	/^        int     name_len;$/;"	m	struct:_http_content_type	file:
namelen	xhttp.c	/^	int	namelen;$/;"	m	struct:_http_ctype	file:
nblocked	thread_fun.h	/^	int		nblocked;	\/* number of blocked *\/$/;"	m	struct:_work
nbyte	connection.h	/^	u_int32_t	nbyte;		\/* number of bytes in queue *\/$/;"	m	struct:connection_queue
ncliclose	proxy.h	/^	u_int64_t	ncliclose;	\/* client close times *\/$/;"	m	struct:proxy_stat
nclierror	proxy.h	/^	u_int64_t	nclierror;	\/* client error times *\/$/;"	m	struct:proxy_stat
nclirecv	proxy.h	/^	u_int64_t	nclirecv;	\/* recv client bytes *\/$/;"	m	struct:proxy_stat
nclisend	proxy.h	/^	u_int64_t	nclisend;	\/* send client bytes *\/$/;"	m	struct:proxy_stat
ncookie_0	xhttp.h	/^	u_int16_t	ncookie_0;	\/* number of cookie *\/$/;"	m	struct:_http_int
ncookie_1	xhttp.h	/^	u_int16_t	ncookie_1;	\/* number of cookie *\/$/;"	m	struct:_http_int
need_lock	mempool.h	/^	u_int16_t	need_lock:1;	\/* the mempool need locked *\/$/;"	m	struct:mempool
nevent	thread_fun.h	/^	int		nevent;		\/* number of event *\/$/;"	m	struct:_work
new_data	http_modify.h	/^        char* new_data;$/;"	m	struct:http_modify_stream
new_num	http.h	/^        short           new_num;$/;"	m	struct:_http_argctrl
new_num	http.h	/^        short           new_num;$/;"	m	struct:_http_fctrl
new_num	http_poll.h	/^        short           new_num;$/;"	m	struct:_http_argctrl
new_num	xhttp.h	/^	short		new_num;$/;"	m	struct:_http_argctrl
new_num	xhttp.h	/^        short		new_num;$/;"	m	struct:_http_fctrl
next	acsmx.c	/^   struct _qnode *next;$/;"	m	struct:_qnode	typeref:struct:_qnode::_qnode	file:
next	acsmx.h	/^    struct  _acsm_pattern *next;$/;"	m	struct:_acsm_pattern	typeref:struct:_acsm_pattern::_acsm_pattern
next	cfg_db.h	/^	struct _conf_vps_ *next;$/;"	m	struct:_conf_vps_	typeref:struct:_conf_vps_::_conf_vps_
next	libmulpat.h	/^	struct _multi_pattern_node_t *next;$/;"	m	struct:_multi_pattern_node_t	typeref:struct:_multi_pattern_node_t::_multi_pattern_node_t
next	load_rule.h	/^	struct rule_node_t *next;$/;"	m	struct:rule_node_t	typeref:struct:rule_node_t::rule_node_t
next	mempool.c	/^	struct _op_cache *next, **pprev;\/* the list pointer *\/$/;"	m	struct:_op_cache	typeref:struct:_op_cache::_op_cache	file:
next	mempool.c	/^	struct _op_node	*next, **pprev;	\/* list pointer in cache *\/$/;"	m	struct:_op_node	typeref:struct:_op_node::_op_node	file:
next	packet.h	/^	struct packet	*next, *prev;	\/* double link in queue *\/$/;"	m	struct:packet	typeref:struct:packet::packet
next	sqlite_db.h	/^	struct data_record_t *next;$/;"	m	struct:data_record_t	typeref:struct:data_record_t::data_record_t
nfd	thread_fun.h	/^	int		nfd;		\/* number obj in input queue *\/$/;"	m	struct:_recv
nfreed	connection.h	/^	size_t		nfreed;		\/* number of freed entry *\/$/;"	m	struct:connection_table
nfreed	mempool.h	/^	u_int32_t	nfreed;		\/* number of freed memects *\/$/;"	m	struct:mempool
nhline_0	xhttp.h	/^	u_int16_t	nhline_0;	\/* number of headline *\/$/;"	m	struct:_http_int
nhline_1	xhttp.h	/^	u_int16_t	nhline_1;	\/* number of headline *\/$/;"	m	struct:_http_int
nhttp	proxy.h	/^	u_int64_t	nhttp;		\/* total http session number *\/$/;"	m	struct:proxy_stat
nhttplive	proxy.h	/^	u_int64_t	nhttplive;	\/* live http session number *\/$/;"	m	struct:proxy_stat
nhttps	proxy.h	/^	u_int64_t	nhttps;		\/* total https session number *\/$/;"	m	struct:proxy_stat
nhttpslive	proxy.h	/^	u_int64_t	nhttpslive;	\/* live https session number *\/$/;"	m	struct:proxy_stat
ninq	thread_fun.h	/^	int		ninq;		\/* number of objs in input queue *\/$/;"	m	struct:_work
nlive	log_db.h	/^	u_int64_t nlive;$/;"	m	struct:_t_log_t
nlive	proxy.h	/^	u_int64_t	nlive;		\/* live session number *\/$/;"	m	struct:proxy_stat
nocase	acsmx.h	/^    int      nocase;$/;"	m	struct:_acsm_pattern
node	load_rule.c	/^rule_node *node = NULL;$/;"	v
node_list	mempool.h	/^	void		*node_list;	\/* the freed node list *\/$/;"	m	struct:mempool
nodesize	mempool.h	/^	u_int16_t	nodesize;	\/* the node memory size *\/$/;"	m	struct:mempool
norn_hlen_0	xhttp.h	/^	u_int16_t	norn_hlen_0;	\/* strip \\r\\n header length *\/$/;"	m	struct:_http_int
norn_hlen_1	xhttp.h	/^	u_int16_t	norn_hlen_1;	\/* strip \\r\\n header length *\/$/;"	m	struct:_http_int
nowlive	log_db.h	/^	u_int64_t nowlive;$/;"	m	struct:_t_log_t
nowlive	proxy.h	/^	u_int64_t	nowlive;		\/* live session number *\/$/;"	m	struct:proxy_stat
nrsaddr	proxy.h	/^	int			nrsaddr;	\/* real server number *\/$/;"	m	struct:context
nsvrclose	proxy.h	/^	u_int64_t	nsvrclose;	\/* server close times *\/$/;"	m	struct:proxy_stat
nsvrerror	proxy.h	/^	u_int64_t	nsvrerror;	\/* server error times *\/$/;"	m	struct:proxy_stat
nsvrrecv	proxy.h	/^	u_int64_t	nsvrrecv;	\/* recv server bytes *\/$/;"	m	struct:proxy_stat
nsvrsend	proxy.h	/^	u_int64_t	nsvrsend;	\/* send server bytes *\/$/;"	m	struct:proxy_stat
null_file	http.h	/^        int             null_file;$/;"	m	struct:_http_local
null_file	xhttp.h	/^	int 		null_file;$/;"	m	struct:_http_local
num	http.h	/^        short           num;$/;"	m	struct:_http_argctrl
num	http.h	/^        short           num;$/;"	m	struct:_http_fctrl
num	http_poll.h	/^        short           num;$/;"	m	struct:_http_argctrl
num	xhttp.h	/^        short		num;$/;"	m	struct:_http_amfctrl
num	xhttp.h	/^        short		num;$/;"	m	struct:_http_argctrl
num	xhttp.h	/^        short		num;$/;"	m	struct:_http_avctrl
num	xhttp.h	/^        short		num;$/;"	m	struct:_http_ckctrl
num	xhttp.h	/^        short		num;$/;"	m	struct:_http_fctrl
num	xhttp.h	/^        short		num;$/;"	m	struct:_http_hctrl
nurlarg	xhttp.h	/^	u_int16_t	nurlarg;	\/* number of URL argument *\/$/;"	m	struct:_http_int
nused	mempool.c	/^	u_int32_t	nused;		\/* number of used memect *\/$/;"	m	struct:_op_cache	file:
nwork	proxy.h	/^	int			nwork;		\/* number of work thread *\/$/;"	m	struct:context
offset	acsmx.h	/^    int      offset;$/;"	m	struct:_acsm_pattern
org_header	xhttp.h	/^	char		org_header[48];$/;"	m	struct:_http_config
org_header_len	xhttp.h	/^	int		org_header_len;$/;"	m	struct:_http_config
origin_ip	xhttp.h	/^	http_str_t	origin_ip;	\/* the origin IP *\/$/;"	m	struct:_header_protocol
outq	connection.h	/^	pktq_t		outq;		\/* the output queue *\/$/;"	m	struct:connection_queue
p	http.h	/^	char* p;$/;"	m	struct:local_str_
p	xhttp.h	/^	char		*p;$/;"	m	struct:_http_str
p_cnt	http.h	/^	int p_cnt;$/;"	m	struct:_http_
p_key_node	load_key.c	/^key_node_t *p_key_node;$/;"	v
packet	packet.h	/^typedef struct packet {$/;"	s
packet_t	packet.h	/^} packet_t;$/;"	t	typeref:struct:packet
params	xhttp.h	/^	http_bmpat_t	params[HTTP_IGNORE_PARAM_NUM];$/;"	m	struct:_http_ignore_param
parse_ac	http_header.c	/^int parse_ac(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_ace	http_header.c	/^int parse_ace(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_au	http_header.c	/^int parse_au(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_cone	http_header.c	/^int parse_cone(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_conl	http_header.c	/^int parse_conl(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_conn	http_header.c	/^int parse_conn(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_cont	http_header.c	/^int parse_cont(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_coo	http_header.c	/^int parse_coo(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_ho	http_header.c	/^int parse_ho(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_lo	http_header.c	/^int parse_lo(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_method	http_header.c	/^int parse_method(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_null	http_header.c	/^int parse_null(char* value,int value_len,int offset,http_t* info)$/;"	f
parse_ra	http_header.c	/^int parse_ra(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_re	http_header.c	/^int parse_re(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_retcode	http_header.c	/^int parse_retcode(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_set	http_header.c	/^int parse_set(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_t	thread_fun.h	/^} parse_t;$/;"	t	typeref:struct:_parse
parse_table	http_header.c	/^http_parse_node_t parse_table[2] = {$/;"	v
parse_table	xhttp.c	/^http_parse_node_t parse_table[HTTP_PARSE_TABSIZE] = {$/;"	v
parse_table_parsing	http_header.c	/^void parse_table_parsing(char *begin, char *end, http_t *di)$/;"	f
parse_table_parsing	xhttp.c	/^void parse_table_parsing(char *begin, char *end, http_info_t *di)$/;"	f
parse_tr	http_header.c	/^int parse_tr(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_unknown	http_header.c	/^int parse_unknown(char* name,int name_len,char* value,int value_len,http_t* info)$/;"	f
parse_url_arg	xhttp.c	/^int parse_url_arg(http_info_t* info)$/;"	f
parse_us	http_header.c	/^int parse_us(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_xa	http_header.c	/^int parse_xa(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_xf	http_header.c	/^int parse_xf(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_xp	http_header.c	/^int parse_xp(char* data,int data_len,int offset,http_t* info)$/;"	f
parse_xpb	http_header.c	/^int parse_xpb(char* data,int data_len,int offset,http_t* info)$/;"	f
pat_t	load_key.c	/^}__attribute__((packed)) pat_t;$/;"	t	typeref:struct:_pat_t	file:
path	xhttp.h	/^	http_str_t	path;$/;"	m	struct:_http_cookie
pathurl	xhttp.h	/^	http_str_t	pathurl;	\/* URL decode path like ..\/..\/ *\/$/;"	m	struct:_header_protocol
patrn	acsmx.h	/^    unsigned char         *patrn;$/;"	m	struct:_acsm_pattern
pcre_compile_exp	pcre_func.c	/^pcre_compile_exp(const char *pattern, int options)$/;"	f
pcre_exp	load_rule.h	/^	pcre *pcre_exp;$/;"	m	struct:rule_node_t
pcre_extra	load_rule.h	/^	pcre_extra *pcre_extra;$/;"	m	struct:rule_node_t
pcre_match_exp	pcre_func.c	/^int pcre_match_exp(pcre *exp, pcre_extra *extra, $/;"	f
pcre_match_exp2	pcre_func.c	/^int pcre_match_exp2(pcre *exp, pcre_extra *extra, $/;"	f
pcre_study_exp	pcre_func.c	/^pcre_study_exp(pcre *re, int options)$/;"	f
pcre_study_exp2	pcre_func.c	/^int pcre_study_exp2(pcre *re, pcre_extra **extra)$/;"	f
pkt	connection.h	/^	packet_t	*pkt;		\/* the current queue *\/$/;"	m	struct:connection_queue
pktpool	proxy.h	/^	mempool_t	*pktpool;	\/* pool for packet_t *\/$/;"	m	struct:context
pktq	packet.h	/^typedef struct pktq {$/;"	s
pktq_in	packet.c	/^pktq_in(pktq_t *q, packet_t *pkt)$/;"	f
pktq_join	packet.c	/^pktq_join(pktq_t *dq, pktq_t *sq)$/;"	f
pktq_out	packet.c	/^pktq_out(pktq_t *q)$/;"	f
pktq_t	packet.h	/^} pktq_t;$/;"	t	typeref:struct:pktq
pool	mempool.c	/^	mempool_t	*pool;		\/* the pool it belongs *\/$/;"	m	struct:_op_node	file:
pool	mempool.c	/^	void		*pool;		\/* the memory for memect *\/$/;"	m	struct:_op_cache	file:
port	ip_addr.h	/^	u_int16_t	port;		\/* TCP port *\/$/;"	m	struct:ip_port
port	thread_fun.h	/^	u_int16_t       port;           \/* client port*\/$/;"	m	struct:_workfd
pos	connection.h	/^	u_int32_t	pos;		\/* pos of next recv byte *\/$/;"	m	struct:connection_queue
pos	packet.h	/^	u_int32_t	pos;		\/* position in stream *\/$/;"	m	struct:packet
pprev	mempool.c	/^	struct _op_cache *next, **pprev;\/* the list pointer *\/$/;"	m	struct:_op_cache	typeref:struct:_op_cache::	file:
pprev	mempool.c	/^	struct _op_node	*next, **pprev;	\/* list pointer in cache *\/$/;"	m	struct:_op_node	typeref:struct:_op_node::	file:
prev	packet.h	/^	struct packet	*next, *prev;	\/* double link in queue *\/$/;"	m	struct:packet	typeref:struct:packet::
priv	thread_fun.h	/^	void		*priv;	\/* for thread private data *\/$/;"	m	struct:thread
process_query	sqlite_db.c	/^void process_query( struct waf_signature_search_object *db_obj,char *sql_str,int *err )$/;"	f
process_query	sqlite_db.h	/^	void ( *process_query )( struct waf_signature_search_object *,char *,int *);$/;"	m	struct:waf_signature_search_object
protocol	xhttp.h	/^	http_protocol_t	protocol;$/;"	m	struct:_http_para
proxy_cfg_rlock	proxy2.c	/^proxy_cfg_rlock(void)$/;"	f
proxy_cfg_unlock	proxy2.c	/^proxy_cfg_unlock(void)$/;"	f
proxy_log_lock	proxy2.c	/^proxy_log_lock(void)$/;"	f
proxy_log_unlock	proxy2.c	/^proxy_log_unlock(void)$/;"	f
proxy_main2	proxy2.c	/^proxy_main2()$/;"	f
proxy_stat	proxy.h	/^typedef struct proxy_stat {$/;"	s
proxy_stat_lock	proxy2.c	/^proxy_stat_lock(void)$/;"	f
proxy_stat_t	proxy.h	/^} proxy_stat_t;$/;"	t	typeref:struct:proxy_stat
proxy_stat_unlock	proxy2.c	/^proxy_stat_unlock(void)$/;"	f
queue_add	acsmx.c	/^queue_add (QUEUE * s, int state) $/;"	f	file:
queue_count	acsmx.c	/^queue_count (QUEUE * s) $/;"	f	file:
queue_free	acsmx.c	/^queue_free (QUEUE * s) $/;"	f	file:
queue_init	acsmx.c	/^queue_init (QUEUE * s) $/;"	f	file:
queue_remove	acsmx.c	/^queue_remove (QUEUE * s) $/;"	f	file:
range	xhttp.h	/^	u_int16_t	range;		\/* Request Range number *\/$/;"	m	struct:_http_int
raw	log_db.h	/^        char 	raw[2047];$/;"	m	struct:_alog_
raw_file_len	http.h	/^        int raw_file_len;$/;"	m	struct:_http_file
raw_file_len	xhttp.h	/^	int raw_file_len;$/;"	m	struct:_http_file
raw_fullurl	xhttp.h	/^	http_str_t	raw_fullurl;	\/* origin full URL, include args *\/$/;"	m	struct:_header_protocol
raw_host	xhttp.h	/^	http_str_t	raw_host;	\/* Host *\/$/;"	m	struct:_header_protocol
raw_url	http.h	/^        x_str_t      raw_url;   $/;"	m	struct:_http_str
raw_url	xhttp.h	/^	http_str_t	raw_url;	\/* the URL without args *\/$/;"	m	struct:_header_protocol
read_pipe	connection.h	/^	int		read_pipe;	\/* read pipe for splice *\/$/;"	m	struct:connection
realip_flag	http.h	/^        int             realip_flag;$/;"	m	struct:_http_local
realip_flag	xhttp.h	/^	int		realip_flag;$/;"	m	struct:_http_local
recon_log_db	log_db.c	/^int recon_log_db ()$/;"	f
record	sqlite_db.h	/^	data_record_t *record;$/;"	m	struct:waf_signature_search_object
record_count	sqlite_db.h	/^	unsigned int record_count;$/;"	m	struct:waf_signature_search_object
recv_chunk	http_body.c	/^int recv_chunk(char* data,int data_len,http_t* info)$/;"	f
recv_content_len	xhttp.c	/^int recv_content_len(char *data, int data_len,http_info_t* info)$/;"	f
recv_epfd	thread_fun.h	/^	int		recv_epfd;	\/* recv epoll *\/$/;"	m	struct:_work
recv_t	thread_fun.h	/^} recv_t;$/;"	t	typeref:struct:_recv
recvpos	packet.h	/^	u_int16_t	recvpos;	\/* teh start recv position *\/$/;"	m	struct:packet
refer	http_modify.h	/^        char* refer;$/;"	m	struct:http_header_modify_
refer_len	http_modify.h	/^	int refer_len;$/;"	m	struct:http_header_modify_
reference	http.h	/^        x_str_t      reference; $/;"	m	struct:_http_str
reference	xhttp.h	/^	http_str_t	reference;	\/* Reference value *\/$/;"	m	struct:_header_protocol
refresh_object	sqlite_db.c	/^void refresh_object( waf_signature_search_object *db_obj )$/;"	f
release_query	sqlite_db.h	/^	void ( *release_query )( struct waf_signature_search_object * );$/;"	m	struct:waf_signature_search_object
remove_8341	xhttp.h	/^        int		remove_8341;$/;"	m	struct:_http_config
remove_para_flag	xhttp.h	/^	int		remove_para_flag;$/;"	m	struct:_http_config
retcode	http.h	/^	x_str_t      retcode;$/;"	m	struct:_http_str
retcode	http.h	/^        u_int16_t       retcode;      $/;"	m	struct:_http_int
retcode	xhttp.h	/^	http_str_t	retcode;	\/* Ret-Code str *\/$/;"	m	struct:_header_protocol
retcode	xhttp.h	/^	u_int16_t	retcode;	\/* Response code *\/$/;"	m	struct:_http_int
rsaddr	proxy.h	/^	ip_port_t	rsaddr;\/* real server address *\/$/;"	m	struct:context
rule_check	pat.c	/^int rule_check(http_t *p_http, connection_t *conn)$/;"	f
rule_check_arg	pat.c	/^int rule_check_arg(http_t *p_http, connection_t *conn)$/;"	f
rule_check_entry	pat.c	/^int rule_check_entry(http_t *p_http, connection_t *conn)$/;"	f
rule_check_header_agent	pat.c	/^int rule_check_header_agent(http_t *p_http, connection_t *conn)$/;"	f
rule_check_header_cookie	pat.c	/^int rule_check_header_cookie(http_t *p_http, connection_t *conn)$/;"	f
rule_check_url	pat.c	/^int rule_check_url(http_t *p_http, connection_t *conn)$/;"	f
rule_node	load_rule.h	/^} rule_node;$/;"	t	typeref:struct:rule_node_t
rule_node_t	load_rule.h	/^typedef struct rule_node_t {$/;"	s
rule_option_tree	acsmx.h	/^    void   * rule_option_tree;$/;"	m	struct:_acsm_pattern
ruleid	load_rule.h	/^	char ruleid[MAX_TXT_LEN2];$/;"	m	struct:rule_node_t
s_http_parse	http.c	/^int s_http_parse(char* data,int data_len,http_t* http)$/;"	f
sa	sock_util.h	/^		struct sockaddr		sa;	\/* common *\/$/;"	m	union:sk_addr::__anon15	typeref:struct:sk_addr::__anon15::sockaddr
sbuf	http.c	/^char sbuf[40960];$/;"	v
sbuf_len	http.c	/^int sbuf_len;$/;"	v
search_key	load_key.c	/^int search_key( waf_signature_search_object *obj)$/;"	f
search_multi_pattern	pat.c	/^int search_multi_pattern(ACSM_STRUCT *acbm_root, key_data *p_data, char *text, int len)$/;"	f
search_rule	load_rule.c	/^int search_rule( waf_signature_search_object *obj)$/;"	f
search_target	libmulpat.h	/^	unsigned int search_target;$/;"	m	struct:_match_pattern_rst_t
sec_rule_t	load_rule.c	/^typedef struct sec_rule_t {$/;"	s	file:
sec_rule_t	load_rule.c	/^}__attribute__((packed)) sec_rule_t;$/;"	t	typeref:struct:sec_rule_t	file:
send_epfd	thread_fun.h	/^	int		send_epfd;	\/* send epoll *\/$/;"	m	struct:_work
send_t	thread_fun.h	/^} send_t;$/;"	t	typeref:struct:_send
sendpos	packet.h	/^	u_int16_t	sendpos;	\/* the start send position *\/$/;"	m	struct:packet
server	xhttp.h	/^	http_str_t	server;		\/* Server value *\/$/;"	m	struct:_header_protocol
session_get_origin_header	xhttp.c	/^char * session_get_origin_header(void *s, size_t *len, int dir)$/;"	f
sesstbl	thread_fun.h	/^	connection_table_t	*sesstbl;	\/* connection table for each thread *\/$/;"	m	struct:_work
set_method_table	http_table.c	/^int set_method_table(char* method,int method_len,int value,int num)$/;"	f
set_transfer_encoding	xhttp.c	/^int set_transfer_encoding(http_info_t* info,int status)$/;"	f
sid	packet.h	/^	u_int32_t	sid;		\/* the session id of packet *\/$/;"	m	struct:packet
signature_check_error	load_key.c	/^static int signature_check_error( waf_signature_search_object *obj )$/;"	f	file:
signature_check_error	load_rule.c	/^static int signature_check_error( waf_signature_search_object *obj )$/;"	f	file:
size	load_key.c	7;"	d	file:
sk_accept	sock_util.c	/^sk_accept(int fd, ip_addr_t *ip, u_int16_t *port)$/;"	f
sk_accept_2	sock_util.c	/^sk_accept_2(int fd, ip_port_t *ip)$/;"	f
sk_addr	sock_util.h	/^typedef struct sk_addr {$/;"	s
sk_addr_t	sock_util.h	/^} sk_addr_t;$/;"	t	typeref:struct:sk_addr
sk_connect	sock_util.c	/^sk_connect(int fd, ip_port_t *ip)$/;"	f
sk_gethostbyname	sock_util.c	/^sk_gethostbyname(const char *domain, ip_addr_t *ip)$/;"	f
sk_is_connected	sock_util.c	/^sk_is_connected(int fd)$/;"	f
sk_recv	sock_util.c	/^sk_recv(int fd, void *buf, size_t len, int *closed)$/;"	f
sk_send	sock_util.c	/^sk_send(int fd, const void *buf, size_t len)$/;"	f
sk_set_keepalive	sock_util.c	/^sk_set_keepalive(int fd)$/;"	f
sk_set_nonblock	sock_util.c	/^sk_set_nonblock(int fd, int nbio)$/;"	f
sk_tcp_client	sock_util.c	/^sk_tcp_client(ip_port_t *ip)$/;"	f
sk_tcp_client_nb	sock_util.c	/^sk_tcp_client_nb(ip_port_t *ip, int *wait)$/;"	f
sk_tcp_server	sock_util.c	/^sk_tcp_server(ip_port_t *ip)$/;"	f
split	xhttp.h	/^	int		split;$/;"	m	struct:_http_hline
src_ip	log_db.h	/^        char 	src_ip[24];$/;"	m	struct:_alog_
src_port	log_db.h	/^        int 	src_port;$/;"	m	struct:_alog_
ssn	http.h	/^	void* ssn;$/;"	m	struct:_http_
ssn	xhttp.h	/^	void		*ssn;		\/* the session *\/$/;"	m	struct:_http_info
ssnpool	proxy.h	/^	mempool_t	*ssnpool;	\/* pool for session_t *\/$/;"	m	struct:context
stat	proxy.h	/^	proxy_stat_t	stat;		\/* statistic data *\/$/;"	m	struct:context
state	acsmx.c	/^  int state;$/;"	m	struct:_qnode	file:
state	http.h	/^        int             state;$/;"	m	struct:_http_local
state	http_table.h	/^        int             state;$/;"	m	struct:_http_hstate
state	http_table.h	/^        int             state;$/;"	m	struct:_http_state
state	xhttp.c	/^        int		state;$/;"	m	struct:_http_hstate	file:
state	xhttp.c	/^        int		state;$/;"	m	struct:_http_state	file:
state_0	http.h	/^        int             state_0;$/;"	m	struct:_http_logic
state_0	xhttp.h	/^	int		state_0;	\/* request state *\/$/;"	m	struct:_http_logic
state_1	http.h	/^        int             state_1;$/;"	m	struct:_http_logic
state_1	xhttp.h	/^	int		state_1;	\/* response state *\/$/;"	m	struct:_http_logic
stop	proxy.h	/^	int			stop;		\/* proxy stopped *\/$/;"	m	struct:context
str	http.h	/^	http_str_t str;$/;"	m	struct:_http_
strlcpy2	http_basic.c	/^strlcpy2(char *dst, size_t dlen, const char *src, size_t slen)$/;"	f
strlstr	http_basic.c	/^extern char * strlstr(const char *src, size_t slen, const char *pattern, size_t plen)$/;"	f
strlstrip	http_basic.c	/^int strlstrip(char **begin, char **end)$/;"	f
sub_msg	pat.c	/^char sub_msg[SUB_IDX][32] = {$/;"	v
sub_status	http.h	/^        int             sub_status;$/;"	m	struct:_http_local
sub_status	xhttp.h	/^	int		sub_status;$/;"	m	struct:_http_local
subject_flag	http.h	/^        int             subject_flag;$/;"	m	struct:_http_local
subject_flag	xhttp.h	/^	int		subject_flag;$/;"	m	struct:_http_local
sublog_t	log_db.h	/^}sublog_t;$/;"	t	typeref:struct:_sub_log_
svraddr	connection.h	/^	ip_addr_t       svraddr;        \/* the server address *\/$/;"	m	struct:connection
svraddr	connection.h	/^	ip_port_t	svraddr;	\/* server address *\/$/;"	m	struct:connection_tup
svrfd	connection.h	/^	int		svrfd;		\/* server socket *\/$/;"	m	struct:connection
svrfd	connection.h	/^	int		svrfd;		\/* the server fd *\/$/;"	m	struct:connection_tup
svrport	connection.h	/^	u_int16_t       svrport;$/;"	m	struct:connection
svrq	connection.h	/^	connection_queue_t	svrq;		\/* server packet queue *\/$/;"	m	struct:connection
svrrecv	log_db.h	/^	u_int64_t svrrecv;$/;"	m	struct:_t_log_t
table	connection.h	/^	connection_t	**table;	\/* the connection table *\/$/;"	m	struct:connection_table
tail	acsmx.c	/^  QNODE * head, *tail;$/;"	m	struct:_queue	file:
tail	packet.h	/^	packet_t	*tail;$/;"	m	struct:pktq
target	load_rule.c	/^	char target[MAX_TXT_LEN2];$/;"	m	struct:sec_rule_t	file:
target	load_rule.h	/^	char target[MAX_TXT_LEN2];$/;"	m	struct:rule_node_t
target	pat.c	/^	unsigned int target;$/;"	m	struct:_key_data_t	file:
target_type	libmulpat.h	/^	long long target_type;$/;"	m	struct:_match_mulpat_target_t
tenc_0	http.h	/^        int             tenc_0; \/\/ transfer incoding$/;"	m	struct:_http_local
tenc_0	xhttp.h	/^	int		tenc_0; \/\/ transfer incoding$/;"	m	struct:_http_local
tenc_1	http.h	/^        int             tenc_1; \/\/ transfer incoding$/;"	m	struct:_http_local
tenc_1	xhttp.h	/^	int		tenc_1; \/\/ transfer incoding$/;"	m	struct:_http_local
text	acsmx.c	/^unsigned char text[512];$/;"	v
text	load_key.c	/^        char text[MAX_TXT_LEN];$/;"	m	struct:_pat_t	file:
text	load_rule.c	/^	char text[MAX_TXT_LEN];$/;"	m	struct:sec_rule_t	file:
text	load_rule.h	/^	char text[MAX_TXT_LEN];$/;"	m	struct:rule_node_t
text	pat.c	/^	char *text;$/;"	m	struct:_key_data_t	file:
thread	thread_fun.h	/^typedef struct thread {$/;"	s
thread_create	thread_fun.c	/^thread_create(thread_t *t_ctx, int type, void *(*func)(void *arg), int index)$/;"	f
thread_join	thread_fun.c	/^thread_join(thread_t *t_ctx)$/;"	f
thread_t	thread_fun.h	/^} thread_t;$/;"	t	typeref:struct:thread
tid	thread_fun.h	/^	pthread_t	tid;	\/* the thread id *\/$/;"	m	struct:thread
time	log_db.h	/^        time_t  time;$/;"	m	struct:_alog_
tlog_t	log_db.h	/^}tlog_t;$/;"	t	typeref:struct:_t_log_t
tmp_flag	http.h	/^	int tmp_flag;$/;"	m	struct:_http_
token	http_header.c	/^        char            token[128];$/;"	m	struct:_http_parse_node	file:
token	xhttp.c	/^	char		token[HTTP_MAX_TOKENLEN];$/;"	m	struct:_http_parse_node	file:
token_len	http_header.c	/^        int             token_len;$/;"	m	struct:_http_parse_node	file:
token_len	xhttp.c	/^	int		token_len;$/;"	m	struct:_http_parse_node	file:
trim_blank	xhttp.c	/^int trim_blank(char* str,int str_len,http_info_t* info)$/;"	f
txt	load_key.h	/^        char txt[MAX_TXT_LEN]; $/;"	m	struct:_key_node_t
type	thread_fun.h	/^	int		type;	\/* see above thread type *\/$/;"	m	struct:thread
type	xhttp.c	/^        int     type;$/;"	m	struct:my_item	file:
un_recv_chunked_len	http.h	/^        int             un_recv_chunked_len; \/\/un recv chunk lenhhhhhh$/;"	m	struct:_http_local
un_recv_content_len	http.h	/^	int  		un_recv_content_len;$/;"	m	struct:_http_local
un_recv_len	http.h	/^	int 		un_recv_len;$/;"	m	struct:_http_local
unlikely	connection.c	17;"	d	file:
unlikely	ip_addr.c	18;"	d	file:
unlikely	sock_util.c	21;"	d	file:
unrcv_cklen	xhttp.h	/^	int		unrcv_cklen; \/\/un recv chunk len$/;"	m	struct:_http_local
unrcv_len_0	http.h	/^        int             unrcv_len_0;$/;"	m	struct:_http_local
unrcv_len_0	xhttp.h	/^	int		unrcv_len_0;$/;"	m	struct:_http_local
unrcv_len_1	http.h	/^        int             unrcv_len_1;$/;"	m	struct:_http_local
unrcv_len_1	xhttp.h	/^	int		unrcv_len_1;$/;"	m	struct:_http_local
upfile_count	xhttp.h	/^	int             upfile_count;  $/;"	m	struct:_http_config
url	http.h	/^        x_str_t      url;   $/;"	m	struct:_http_str
url	http_modify.h	/^        char* url;$/;"	m	struct:http_header_modify_
url	log_db.h	/^        char 	url[M_LEN-1];$/;"	m	struct:_alog_
url	xhttp.h	/^	http_str_t	url;		\/* the decode URL without args *\/$/;"	m	struct:_header_protocol
url_and_arg	http.h	/^        x_str_t      url_and_arg;   $/;"	m	struct:_http_str
url_arg_cnt	http.h	/^	int 		url_arg_cnt;$/;"	m	struct:_http_int
url_arg_len	http.h	/^	int 		url_arg_len;$/;"	m	struct:_http_int
url_len	http_modify.h	/^	int url_len;$/;"	m	struct:http_header_modify_
urlarg_len	xhttp.h	/^	u_int16_t	urlarg_len;	\/* URL argument length *\/$/;"	m	struct:_http_int
v4	ip_addr.h	/^		struct in_addr	v4;	\/* IPv4 address *\/$/;"	m	union:ip_addr::__anon10	typeref:struct:ip_addr::__anon10::in_addr
v4	ip_addr.h	/^		struct in_addr	v4;	\/* IPv4 address *\/$/;"	m	union:ip_mask::__anon11	typeref:struct:ip_mask::__anon11::in_addr
v4	ip_addr.h	/^		struct in_addr	v4;	\/* IPv4 address *\/$/;"	m	union:ip_port::__anon12	typeref:struct:ip_port::__anon12::in_addr
v4	sock_util.h	/^		struct sockaddr_in	v4;	\/* IPv4 *\/$/;"	m	union:sk_addr::__anon15	typeref:struct:sk_addr::__anon15::sockaddr_in
v6	ip_addr.h	/^		struct in6_addr	v6;	\/* IPv6 address *\/$/;"	m	union:ip_addr::__anon10	typeref:struct:ip_addr::__anon10::in6_addr
v6	ip_addr.h	/^		struct in6_addr	v6;	\/* IPv6 address *\/$/;"	m	union:ip_mask::__anon11	typeref:struct:ip_mask::__anon11::in6_addr
v6	ip_addr.h	/^		struct in6_addr	v6;	\/* IPv6 address *\/$/;"	m	union:ip_port::__anon12	typeref:struct:ip_port::__anon12::in6_addr
v6	sock_util.h	/^		struct sockaddr_in6	v6;	\/* IPv6 *\/$/;"	m	union:sk_addr::__anon15	typeref:struct:sk_addr::__anon15::sockaddr_in6
value	http.h	/^        x_str_t      value;$/;"	m	struct:_http_arg
value	http.h	/^        x_str_t      value;$/;"	m	struct:_http_file
value	http_poll.h	/^        http_str_t      value;$/;"	m	struct:_http_arg
value	http_table.h	/^        int             value;$/;"	m	struct:_http_table__
value	xhttp.c	/^	int		value;$/;"	m	struct:_http_calltbl	file:
value	xhttp.h	/^	http_str_t	value;$/;"	m	struct:_http_amf
value	xhttp.h	/^	http_str_t	value;$/;"	m	struct:_http_arg
value	xhttp.h	/^	http_str_t	value;$/;"	m	struct:_http_av
value	xhttp.h	/^	http_str_t	value;$/;"	m	struct:_http_cookie
value	xhttp.h	/^	http_str_t	value;$/;"	m	struct:_http_file
value	xhttp.h	/^	http_str_t	value;$/;"	m	struct:_http_header_line
value	xhttp.h	/^	http_str_t	value;$/;"	m	struct:_http_hline
value_flag	http_poll.h	/^        int             value_flag;$/;"	m	struct:_http_arg
value_flag	xhttp.h	/^	int		value_flag;$/;"	m	struct:_http_arg
ver_error	xhttp.h	/^	int	ver_error;$/;"	m	struct:_http_info
version_0	xhttp.h	/^        short		version_0;	\/* request http version *\/	$/;"	m	struct:_http_logic
version_1	xhttp.h	/^        short		version_1;	\/* response http version *\/$/;"	m	struct:_http_logic
vpsid	cfg_db.h	/^	int vpsid; $/;"	m	struct:_conf_vps_
waf_signature_search_object	sqlite_db.h	/^typedef struct waf_signature_search_object$/;"	s
waf_signature_search_object	sqlite_db.h	/^}waf_signature_search_object;$/;"	t	typeref:struct:waf_signature_search_object
wafid	proxy.h	/^	int			wafid;		\/* debug level *\/$/;"	m	struct:context
wafsid	xhttp.h	/^	http_str_t	wafsid;		\/* FortiWAF arg *\/$/;"	m	struct:_header_protocol
word_boundary_check	pat.c	/^int word_boundary_check(char *name, char *buf, int buf_len, int index, int flag)$/;"	f
work_add_connection	work2.c	/^work_add_connection(int index, workfd_t *wfd)$/;"	f
work_run	work2.c	/^work_run(void *arg)$/;"	f
work_t	thread_fun.h	/^} work_t;$/;"	t	typeref:struct:_work
workfd_t	thread_fun.h	/^} workfd_t;$/;"	t	typeref:struct:_workfd
works	proxy.h	/^	thread_t	works[MAX_WORKNUM];\/* the parse thread *\/$/;"	m	struct:context
write_pipe	connection.h	/^	int		write_pipe;	\/* write pipe for splice *\/$/;"	m	struct:connection
x2c	http_decode.c	/^static unsigned char x2c(unsigned char *what) {$/;"	f	file:
x_memcasestr	http_modify.c	/^char *x_memcasestr(const char *haystack, int range, const char *needle, int needle_len)$/;"	f
x_memrstr	http_modify.c	/^char *x_memrstr(const char *haystack, int range, const char *needle, int needle_len)$/;"	f
x_power	xhttp.h	/^	http_str_t	x_power;	\/* X-Power value *\/$/;"	m	struct:_header_protocol
x_realip	xhttp.h	/^	http_str_t	x_realip;	\/* X-Real-IP value *\/$/;"	m	struct:_header_protocol
x_str_t	http.h	/^}x_str_t;$/;"	t	typeref:struct:local_str_
xff	http_modify.h	/^        char* xff;$/;"	m	struct:http_header_modify_
xff	xhttp.h	/^	http_str_t	xff;		\/* X-Forwarded-For value *\/$/;"	m	struct:_header_protocol
xff_len	http_modify.h	/^	int xff_len;$/;"	m	struct:http_header_modify_
xlatcase	acsmx.c	/^static unsigned char xlatcase[256];$/;"	v	file:
xpad	xhttp.h	/^	http_str_t	xpad;		\/* X-Pad value *\/$/;"	m	struct:_header_protocol
